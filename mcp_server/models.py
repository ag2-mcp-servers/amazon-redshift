# generated by fastapi-codegen:
#   filename:  openapi.yaml
#   timestamp: 2025-06-28T13:20:10+00:00

from __future__ import annotations

from datetime import datetime
from enum import Enum
from typing import Any, List, Optional

from pydantic import BaseModel, Field, RootModel, SecretStr, constr


class AccessToClusterDeniedFault(RootModel[Any]):
    root: Any


class AccessToSnapshotDeniedFault(RootModel[Any]):
    root: Any


class ActionType(Enum):
    restore_cluster = 'restore-cluster'
    recommend_node_config = 'recommend-node-config'
    resize_cluster = 'resize-cluster'


class AquaConfigurationStatus(Enum):
    enabled = 'enabled'
    disabled = 'disabled'
    auto = 'auto'


class AquaStatus(Enum):
    enabled = 'enabled'
    disabled = 'disabled'
    applying = 'applying'


class AuthenticationProfileAlreadyExistsFault(RootModel[Any]):
    root: Any


class AuthenticationProfileNameString(
    RootModel[constr(pattern=r'^[a-zA-Z0-9\-]+$', max_length=63)]
):
    root: constr(pattern=r'^[a-zA-Z0-9\-]+$', max_length=63)


class AuthenticationProfileNotFoundFault(RootModel[Any]):
    root: Any


class AuthenticationProfileQuotaExceededFault(RootModel[Any]):
    root: Any


class AuthorizationAlreadyExistsFault(RootModel[Any]):
    root: Any


class AuthorizationNotFoundFault(RootModel[Any]):
    root: Any


class AuthorizationQuotaExceededFault(RootModel[Any]):
    root: Any


class AuthorizationStatus(Enum):
    Authorized = 'Authorized'
    Revoking = 'Revoking'


class BatchDeleteRequestSizeExceededFault(RootModel[Any]):
    root: Any


class BatchModifyClusterSnapshotsLimitExceededFault(RootModel[Any]):
    root: Any


class Boolean(RootModel[bool]):
    root: bool


class BooleanOptional(RootModel[bool]):
    root: bool


class BucketNotFoundFault(RootModel[Any]):
    root: Any


class ClusterAlreadyExistsFault(RootModel[Any]):
    root: Any


class ClusterNotFoundFault(RootModel[Any]):
    root: Any


class ClusterOnLatestRevisionFault(RootModel[Any]):
    root: Any


class ClusterParameterGroupAlreadyExistsFault(RootModel[Any]):
    root: Any


class ClusterParameterGroupNotFoundFault(RootModel[Any]):
    root: Any


class ClusterParameterGroupQuotaExceededFault(RootModel[Any]):
    root: Any


class ClusterQuotaExceededFault(RootModel[Any]):
    root: Any


class ClusterSecurityGroupAlreadyExistsFault(RootModel[Any]):
    root: Any


class ClusterSecurityGroupNotFoundFault(RootModel[Any]):
    root: Any


class ClusterSecurityGroupQuotaExceededFault(RootModel[Any]):
    root: Any


class ClusterSnapshotAlreadyExistsFault(RootModel[Any]):
    root: Any


class ClusterSnapshotNotFoundFault(RootModel[Any]):
    root: Any


class ClusterSnapshotQuotaExceededFault(RootModel[Any]):
    root: Any


class ClusterSubnetGroupAlreadyExistsFault(RootModel[Any]):
    root: Any


class ClusterSubnetGroupNotFoundFault(RootModel[Any]):
    root: Any


class ClusterSubnetGroupQuotaExceededFault(RootModel[Any]):
    root: Any


class ClusterSubnetQuotaExceededFault(RootModel[Any]):
    root: Any


class CopyToRegionDisabledFault(RootModel[Any]):
    root: Any


class DataShareStatus(Enum):
    ACTIVE = 'ACTIVE'
    PENDING_AUTHORIZATION = 'PENDING_AUTHORIZATION'
    AUTHORIZED = 'AUTHORIZED'
    DEAUTHORIZED = 'DEAUTHORIZED'
    REJECTED = 'REJECTED'
    AVAILABLE = 'AVAILABLE'


class DataShareStatusForConsumer(Enum):
    ACTIVE = 'ACTIVE'
    AVAILABLE = 'AVAILABLE'


class DataShareStatusForProducer(Enum):
    ACTIVE = 'ACTIVE'
    AUTHORIZED = 'AUTHORIZED'
    PENDING_AUTHORIZATION = 'PENDING_AUTHORIZATION'
    DEAUTHORIZED = 'DEAUTHORIZED'
    REJECTED = 'REJECTED'


class DeleteAuthenticationProfileMessage(BaseModel):
    AuthenticationProfileName: AuthenticationProfileNameString


class DeleteAuthenticationProfileResult(BaseModel):
    AuthenticationProfileName: Optional[AuthenticationProfileNameString] = None


class DependentServiceRequestThrottlingFault(RootModel[Any]):
    root: Any


class DependentServiceUnavailableFault(RootModel[Any]):
    root: Any


class DescribeAuthenticationProfilesMessage(BaseModel):
    AuthenticationProfileName: Optional[AuthenticationProfileNameString] = None


class Double(RootModel[float]):
    root: float


class DoubleOptional(RootModel[float]):
    root: float


class EndpointAlreadyExistsFault(RootModel[Any]):
    root: Any


class EndpointAuthorizationAlreadyExistsFault(RootModel[Any]):
    root: Any


class EndpointAuthorizationNotFoundFault(RootModel[Any]):
    root: Any


class EndpointAuthorizationsPerClusterLimitExceededFault(RootModel[Any]):
    root: Any


class EndpointNotFoundFault(RootModel[Any]):
    root: Any


class EndpointsPerAuthorizationLimitExceededFault(RootModel[Any]):
    root: Any


class EndpointsPerClusterLimitExceededFault(RootModel[Any]):
    root: Any


class EventSubscriptionQuotaExceededFault(RootModel[Any]):
    root: Any


class HsmClientCertificateAlreadyExistsFault(RootModel[Any]):
    root: Any


class HsmClientCertificateNotFoundFault(RootModel[Any]):
    root: Any


class HsmClientCertificateQuotaExceededFault(RootModel[Any]):
    root: Any


class HsmConfigurationAlreadyExistsFault(RootModel[Any]):
    root: Any


class HsmConfigurationNotFoundFault(RootModel[Any]):
    root: Any


class HsmConfigurationQuotaExceededFault(RootModel[Any]):
    root: Any


class InProgressTableRestoreQuotaExceededFault(RootModel[Any]):
    root: Any


class IncompatibleOrderableOptions(RootModel[Any]):
    root: Any


class InsufficientClusterCapacityFault(RootModel[Any]):
    root: Any


class InsufficientS3BucketPolicyFault(RootModel[Any]):
    root: Any


class Integer(RootModel[int]):
    root: int


class IntegerOptional(RootModel[int]):
    root: int


class InvalidAuthenticationProfileRequestFault(RootModel[Any]):
    root: Any


class InvalidAuthorizationStateFault(RootModel[Any]):
    root: Any


class InvalidClusterParameterGroupStateFault(RootModel[Any]):
    root: Any


class InvalidClusterSecurityGroupStateFault(RootModel[Any]):
    root: Any


class InvalidClusterSnapshotScheduleStateFault(RootModel[Any]):
    root: Any


class InvalidClusterSnapshotStateFault(RootModel[Any]):
    root: Any


class InvalidClusterStateFault(RootModel[Any]):
    root: Any


class InvalidClusterSubnetGroupStateFault(RootModel[Any]):
    root: Any


class InvalidClusterSubnetStateFault(RootModel[Any]):
    root: Any


class InvalidClusterTrackFault(RootModel[Any]):
    root: Any


class InvalidDataShareFault(RootModel[Any]):
    root: Any


class InvalidElasticIpFault(RootModel[Any]):
    root: Any


class InvalidEndpointStateFault(RootModel[Any]):
    root: Any


class InvalidHsmClientCertificateStateFault(RootModel[Any]):
    root: Any


class InvalidHsmConfigurationStateFault(RootModel[Any]):
    root: Any


class InvalidNamespaceFault(RootModel[Any]):
    root: Any


class InvalidReservedNodeStateFault(RootModel[Any]):
    root: Any


class InvalidRestoreFault(RootModel[Any]):
    root: Any


class InvalidRetentionPeriodFault(RootModel[Any]):
    root: Any


class InvalidS3BucketNameFault(RootModel[Any]):
    root: Any


class InvalidS3KeyPrefixFault(RootModel[Any]):
    root: Any


class InvalidScheduleFault(RootModel[Any]):
    root: Any


class InvalidScheduledActionFault(RootModel[Any]):
    root: Any


class InvalidSnapshotCopyGrantStateFault(RootModel[Any]):
    root: Any


class InvalidSubnet(RootModel[Any]):
    root: Any


class InvalidSubscriptionStateFault(RootModel[Any]):
    root: Any


class InvalidTableRestoreArgumentFault(RootModel[Any]):
    root: Any


class InvalidTagFault(RootModel[Any]):
    root: Any


class InvalidUsageLimitFault(RootModel[Any]):
    root: Any


class InvalidVPCNetworkStateFault(RootModel[Any]):
    root: Any


class LimitExceededFault(RootModel[Any]):
    root: Any


class LogDestinationType(Enum):
    s3 = 's3'
    cloudwatch = 'cloudwatch'


class Long(RootModel[int]):
    root: int


class LongOptional(RootModel[int]):
    root: int


class Mode(Enum):
    standard = 'standard'
    high_performance = 'high-performance'


class NodeConfigurationOptionsFilterName(Enum):
    NodeType = 'NodeType'
    NumberOfNodes = 'NumberOfNodes'
    EstimatedDiskUtilizationPercent = 'EstimatedDiskUtilizationPercent'
    Mode = 'Mode'


class NumberOfNodesPerClusterLimitExceededFault(RootModel[Any]):
    root: Any


class NumberOfNodesQuotaExceededFault(RootModel[Any]):
    root: Any


class OperatorType(Enum):
    eq = 'eq'
    lt = 'lt'
    gt = 'gt'
    le = 'le'
    ge = 'ge'
    in_ = 'in'
    between = 'between'


class ParameterApplyType(Enum):
    static = 'static'
    dynamic = 'dynamic'


class PartnerIntegrationAccountId(
    RootModel[constr(pattern=r'^[0-9]+$', min_length=12, max_length=12)]
):
    root: constr(pattern=r'^[0-9]+$', min_length=12, max_length=12)


class PartnerIntegrationClusterIdentifier(
    RootModel[constr(pattern=r'^[a-zA-Z0-9\-]+$', max_length=63)]
):
    root: constr(pattern=r'^[a-zA-Z0-9\-]+$', max_length=63)


class PartnerIntegrationDatabaseName(
    RootModel[constr(pattern=r'^[\p{L}_][\p{L}\p{N}@$#_]+$', max_length=127)]
):
    root: constr(pattern=r'^[\p{L}_][\p{L}\p{N}@$#_]+$', max_length=127)


class PartnerIntegrationPartnerName(
    RootModel[constr(pattern=r'^[a-zA-Z0-9\-_]+$', max_length=255)]
):
    root: constr(pattern=r'^[a-zA-Z0-9\-_]+$', max_length=255)


class PartnerIntegrationStatus(Enum):
    Active = 'Active'
    Inactive = 'Inactive'
    RuntimeFailure = 'RuntimeFailure'
    ConnectionFailure = 'ConnectionFailure'


class PartnerIntegrationStatusMessage(
    RootModel[constr(pattern=r'^[\x20-\x7E]+$', max_length=262144)]
):
    root: constr(pattern=r'^[\x20-\x7E]+$', max_length=262144)


class PartnerNotFoundFault(RootModel[Any]):
    root: Any


class ReservedNodeAlreadyExistsFault(RootModel[Any]):
    root: Any


class ReservedNodeAlreadyMigratedFault(RootModel[Any]):
    root: Any


class ReservedNodeExchangeActionType(Enum):
    restore_cluster = 'restore-cluster'
    resize_cluster = 'resize-cluster'


class ReservedNodeExchangeNotFoundFault(RootModel[Any]):
    root: Any


class ReservedNodeExchangeStatusType(Enum):
    REQUESTED = 'REQUESTED'
    PENDING = 'PENDING'
    IN_PROGRESS = 'IN_PROGRESS'
    RETRYING = 'RETRYING'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'


class ReservedNodeNotFoundFault(RootModel[Any]):
    root: Any


class ReservedNodeOfferingNotFoundFault(RootModel[Any]):
    root: Any


class ReservedNodeOfferingType(Enum):
    Regular = 'Regular'
    Upgradable = 'Upgradable'


class ReservedNodeQuotaExceededFault(RootModel[Any]):
    root: Any


class ResizeNotFoundFault(RootModel[Any]):
    root: Any


class ResourceNotFoundFault(RootModel[Any]):
    root: Any


class SNSInvalidTopicFault(RootModel[Any]):
    root: Any


class SNSNoAuthorizationFault(RootModel[Any]):
    root: Any


class SNSTopicArnNotFoundFault(RootModel[Any]):
    root: Any


class ScheduleDefinitionTypeUnsupportedFault(RootModel[Any]):
    root: Any


class ScheduleState(Enum):
    MODIFYING = 'MODIFYING'
    ACTIVE = 'ACTIVE'
    FAILED = 'FAILED'


class ScheduledActionAlreadyExistsFault(RootModel[Any]):
    root: Any


class ScheduledActionFilterName(Enum):
    cluster_identifier = 'cluster-identifier'
    iam_role = 'iam-role'


class ScheduledActionNotFoundFault(RootModel[Any]):
    root: Any


class ScheduledActionQuotaExceededFault(RootModel[Any]):
    root: Any


class ScheduledActionState(Enum):
    ACTIVE = 'ACTIVE'
    DISABLED = 'DISABLED'


class ScheduledActionTypeUnsupportedFault(RootModel[Any]):
    root: Any


class ScheduledActionTypeValues(Enum):
    ResizeCluster = 'ResizeCluster'
    PauseCluster = 'PauseCluster'
    ResumeCluster = 'ResumeCluster'


class SensitiveString(RootModel[SecretStr]):
    root: SecretStr


class SnapshotAttributeToSortBy(Enum):
    SOURCE_TYPE = 'SOURCE_TYPE'
    TOTAL_SIZE = 'TOTAL_SIZE'
    CREATE_TIME = 'CREATE_TIME'


class SnapshotCopyAlreadyDisabledFault(RootModel[Any]):
    root: Any


class SnapshotCopyAlreadyEnabledFault(RootModel[Any]):
    root: Any


class SnapshotCopyDisabledFault(RootModel[Any]):
    root: Any


class SnapshotCopyGrantAlreadyExistsFault(RootModel[Any]):
    root: Any


class SnapshotCopyGrantNotFoundFault(RootModel[Any]):
    root: Any


class SnapshotCopyGrantQuotaExceededFault(RootModel[Any]):
    root: Any


class SnapshotScheduleAlreadyExistsFault(RootModel[Any]):
    root: Any


class SnapshotScheduleNotFoundFault(RootModel[Any]):
    root: Any


class SnapshotScheduleQuotaExceededFault(RootModel[Any]):
    root: Any


class SnapshotScheduleUpdateInProgressFault(RootModel[Any]):
    root: Any


class SortByOrder(Enum):
    ASC = 'ASC'
    DESC = 'DESC'


class SourceNotFoundFault(RootModel[Any]):
    root: Any


class SourceType(Enum):
    cluster = 'cluster'
    cluster_parameter_group = 'cluster-parameter-group'
    cluster_security_group = 'cluster-security-group'
    cluster_snapshot = 'cluster-snapshot'
    scheduled_action = 'scheduled-action'


class String(RootModel[constr(max_length=2147483647)]):
    root: constr(max_length=2147483647)


class SubnetAlreadyInUse(RootModel[Any]):
    root: Any


class SubnetIdentifierList(RootModel[List[String]]):
    root: List[String]


class SubscriptionAlreadyExistFault(RootModel[Any]):
    root: Any


class SubscriptionCategoryNotFoundFault(RootModel[Any]):
    root: Any


class SubscriptionEventIdNotFoundFault(RootModel[Any]):
    root: Any


class SubscriptionNotFoundFault(RootModel[Any]):
    root: Any


class SubscriptionSeverityNotFoundFault(RootModel[Any]):
    root: Any


class SupportedOperation(BaseModel):
    OperationName: Optional[String] = None


class SupportedOperationList(RootModel[List[SupportedOperation]]):
    root: List[SupportedOperation]


class SupportedPlatform(BaseModel):
    Name: Optional[String] = None


class SupportedPlatformsList(RootModel[List[SupportedPlatform]]):
    root: List[SupportedPlatform]


class TStamp(RootModel[datetime]):
    root: datetime


class TableLimitExceededFault(RootModel[Any]):
    root: Any


class TableRestoreNotFoundFault(RootModel[Any]):
    root: Any


class TableRestoreStatusType(Enum):
    PENDING = 'PENDING'
    IN_PROGRESS = 'IN_PROGRESS'
    SUCCEEDED = 'SUCCEEDED'
    FAILED = 'FAILED'
    CANCELED = 'CANCELED'


class Tag(BaseModel):
    Key: Optional[String] = None
    Value: Optional[String] = None


class TagKeyList(RootModel[List[String]]):
    root: List[String]


class TagLimitExceededFault(RootModel[Any]):
    root: Any


class TagList(RootModel[List[Tag]]):
    root: List[Tag]


class TagValueList(RootModel[List[String]]):
    root: List[String]


class TaggedResource(BaseModel):
    ResourceName: Optional[String] = None
    ResourceType: Optional[String] = None
    Tag_1: Optional[Tag] = Field(None, alias='Tag')


class TaggedResourceList(RootModel[List[TaggedResource]]):
    root: List[TaggedResource]


class TaggedResourceListMessage(BaseModel):
    Marker: Optional[String] = None
    TaggedResources: Optional[TaggedResourceList] = None


class UnauthorizedOperation(RootModel[Any]):
    root: Any


class UnauthorizedPartnerIntegrationFault(RootModel[Any]):
    root: Any


class UnknownSnapshotCopyRegionFault(RootModel[Any]):
    root: Any


class UnsupportedOperationFault(RootModel[Any]):
    root: Any


class UnsupportedOptionFault(RootModel[Any]):
    root: Any


class UpdatePartnerStatusInputMessage(BaseModel):
    AccountId: PartnerIntegrationAccountId
    ClusterIdentifier: PartnerIntegrationClusterIdentifier
    DatabaseName: PartnerIntegrationDatabaseName
    PartnerName: PartnerIntegrationPartnerName
    Status: PartnerIntegrationStatus
    StatusMessage: Optional[PartnerIntegrationStatusMessage] = None


class UpdateTarget(BaseModel):
    DatabaseVersion: Optional[String] = None
    MaintenanceTrackName: Optional[String] = None
    SupportedOperations: Optional[SupportedOperationList] = None


class UsageLimitAlreadyExistsFault(RootModel[Any]):
    root: Any


class UsageLimitBreachAction(Enum):
    log = 'log'
    emit_metric = 'emit-metric'
    disable = 'disable'


class UsageLimitFeatureType(Enum):
    spectrum = 'spectrum'
    concurrency_scaling = 'concurrency-scaling'
    cross_region_datasharing = 'cross-region-datasharing'


class UsageLimitLimitType(Enum):
    time = 'time'
    data_scanned = 'data-scanned'


class UsageLimitNotFoundFault(RootModel[Any]):
    root: Any


class UsageLimitPeriod(Enum):
    daily = 'daily'
    weekly = 'weekly'
    monthly = 'monthly'


class ValueStringList(RootModel[List[String]]):
    root: List[String]


class VpcIdentifierList(RootModel[List[String]]):
    root: List[String]


class VpcSecurityGroupIdList(RootModel[List[String]]):
    root: List[String]


class VpcSecurityGroupMembership(BaseModel):
    Status: Optional[String] = None
    VpcSecurityGroupId: Optional[String] = None


class VpcSecurityGroupMembershipList(RootModel[List[VpcSecurityGroupMembership]]):
    root: List[VpcSecurityGroupMembership]


class Action(Enum):
    AcceptReservedNodeExchange = 'AcceptReservedNodeExchange'


class Version(Enum):
    field_2012_12_01 = '2012-12-01'


class Action4(Enum):
    AddPartner = 'AddPartner'


class Action8(Enum):
    AssociateDataShareConsumer = 'AssociateDataShareConsumer'


class Action12(Enum):
    AuthorizeClusterSecurityGroupIngress = 'AuthorizeClusterSecurityGroupIngress'


class Action16(Enum):
    AuthorizeDataShare = 'AuthorizeDataShare'


class Action20(Enum):
    AuthorizeEndpointAccess = 'AuthorizeEndpointAccess'


class VpcIds(RootModel[List[String]]):
    root: List[String]


class Action24(Enum):
    AuthorizeSnapshotAccess = 'AuthorizeSnapshotAccess'


class Action28(Enum):
    BatchDeleteClusterSnapshots = 'BatchDeleteClusterSnapshots'


class Action32(Enum):
    BatchModifyClusterSnapshots = 'BatchModifyClusterSnapshots'


class SnapshotIdentifierList(RootModel[List[String]]):
    root: List[String]


class Action36(Enum):
    CancelResize = 'CancelResize'


class Action40(Enum):
    CopyClusterSnapshot = 'CopyClusterSnapshot'


class Action44(Enum):
    CreateAuthenticationProfile = 'CreateAuthenticationProfile'


class Action48(Enum):
    CreateCluster = 'CreateCluster'


class ClusterSecurityGroups1(RootModel[List[String]]):
    root: List[String]


class VpcSecurityGroupIds(RootModel[List[String]]):
    root: List[String]


class Tags(RootModel[List[Tag]]):
    root: List[Tag]


class IamRoles(RootModel[List[String]]):
    root: List[String]


class Action52(Enum):
    CreateClusterParameterGroup = 'CreateClusterParameterGroup'


class Action56(Enum):
    CreateClusterSecurityGroup = 'CreateClusterSecurityGroup'


class Action60(Enum):
    CreateClusterSnapshot = 'CreateClusterSnapshot'


class Action64(Enum):
    CreateClusterSubnetGroup = 'CreateClusterSubnetGroup'


class SubnetIds(RootModel[List[String]]):
    root: List[String]


class Action68(Enum):
    CreateEndpointAccess = 'CreateEndpointAccess'


class Action72(Enum):
    CreateEventSubscription = 'CreateEventSubscription'


class SourceIds(RootModel[List[String]]):
    root: List[String]


class EventCategories(RootModel[List[String]]):
    root: List[String]


class Action76(Enum):
    CreateHsmClientCertificate = 'CreateHsmClientCertificate'


class Action80(Enum):
    CreateHsmConfiguration = 'CreateHsmConfiguration'


class Action84(Enum):
    CreateScheduledAction = 'CreateScheduledAction'


class Action88(Enum):
    CreateSnapshotCopyGrant = 'CreateSnapshotCopyGrant'


class Action92(Enum):
    CreateSnapshotSchedule = 'CreateSnapshotSchedule'


class ScheduleDefinitions(RootModel[List[String]]):
    root: List[String]


class Action96(Enum):
    CreateTags = 'CreateTags'


class FeatureType(Enum):
    spectrum = 'spectrum'
    concurrency_scaling = 'concurrency-scaling'
    cross_region_datasharing = 'cross-region-datasharing'


class LimitType(Enum):
    time = 'time'
    data_scanned = 'data-scanned'


class Period(Enum):
    daily = 'daily'
    weekly = 'weekly'
    monthly = 'monthly'


class BreachAction(Enum):
    log = 'log'
    emit_metric = 'emit-metric'
    disable = 'disable'


class Action100(Enum):
    CreateUsageLimit = 'CreateUsageLimit'


class Action104(Enum):
    DeauthorizeDataShare = 'DeauthorizeDataShare'


class Action108(Enum):
    DeleteAuthenticationProfile = 'DeleteAuthenticationProfile'


class Action112(Enum):
    DeleteCluster = 'DeleteCluster'


class Action116(Enum):
    DeleteClusterParameterGroup = 'DeleteClusterParameterGroup'


class Action120(Enum):
    DeleteClusterSecurityGroup = 'DeleteClusterSecurityGroup'


class Action124(Enum):
    DeleteClusterSnapshot = 'DeleteClusterSnapshot'


class Action128(Enum):
    DeleteClusterSubnetGroup = 'DeleteClusterSubnetGroup'


class Action132(Enum):
    DeleteEndpointAccess = 'DeleteEndpointAccess'


class Action136(Enum):
    DeleteEventSubscription = 'DeleteEventSubscription'


class Action140(Enum):
    DeleteHsmClientCertificate = 'DeleteHsmClientCertificate'


class Action144(Enum):
    DeleteHsmConfiguration = 'DeleteHsmConfiguration'


class Action148(Enum):
    DeletePartner = 'DeletePartner'


class Action152(Enum):
    DeleteScheduledAction = 'DeleteScheduledAction'


class Action156(Enum):
    DeleteSnapshotCopyGrant = 'DeleteSnapshotCopyGrant'


class Action160(Enum):
    DeleteSnapshotSchedule = 'DeleteSnapshotSchedule'


class Action164(Enum):
    DeleteTags = 'DeleteTags'


class TagKeys(RootModel[List[String]]):
    root: List[String]


class Action168(Enum):
    DeleteUsageLimit = 'DeleteUsageLimit'


class Action172(Enum):
    DescribeAccountAttributes = 'DescribeAccountAttributes'


class AttributeNames(RootModel[List[String]]):
    root: List[String]


class Action176(Enum):
    DescribeAuthenticationProfiles = 'DescribeAuthenticationProfiles'


class Action180(Enum):
    DescribeClusterDbRevisions = 'DescribeClusterDbRevisions'


class Action184(Enum):
    DescribeClusterParameterGroups = 'DescribeClusterParameterGroups'


class TagValues(RootModel[List[String]]):
    root: List[String]


class Action188(Enum):
    DescribeClusterParameters = 'DescribeClusterParameters'


class Action192(Enum):
    DescribeClusterSecurityGroups = 'DescribeClusterSecurityGroups'


class Action196(Enum):
    DescribeClusterSnapshots = 'DescribeClusterSnapshots'


class Action200(Enum):
    DescribeClusterSubnetGroups = 'DescribeClusterSubnetGroups'


class Action204(Enum):
    DescribeClusterTracks = 'DescribeClusterTracks'


class Action208(Enum):
    DescribeClusterVersions = 'DescribeClusterVersions'


class Action212(Enum):
    DescribeClusters = 'DescribeClusters'


class Action216(Enum):
    DescribeDataShares = 'DescribeDataShares'


class Status(Enum):
    ACTIVE = 'ACTIVE'
    AVAILABLE = 'AVAILABLE'


class Action220(Enum):
    DescribeDataSharesForConsumer = 'DescribeDataSharesForConsumer'


class Status2(Enum):
    ACTIVE = 'ACTIVE'
    AUTHORIZED = 'AUTHORIZED'
    PENDING_AUTHORIZATION = 'PENDING_AUTHORIZATION'
    DEAUTHORIZED = 'DEAUTHORIZED'
    REJECTED = 'REJECTED'


class Action224(Enum):
    DescribeDataSharesForProducer = 'DescribeDataSharesForProducer'


class Action228(Enum):
    DescribeDefaultClusterParameters = 'DescribeDefaultClusterParameters'


class Action232(Enum):
    DescribeEndpointAccess = 'DescribeEndpointAccess'


class Action236(Enum):
    DescribeEndpointAuthorization = 'DescribeEndpointAuthorization'


class Action240(Enum):
    DescribeEventCategories = 'DescribeEventCategories'


class Action244(Enum):
    DescribeEventSubscriptions = 'DescribeEventSubscriptions'


class Action248(Enum):
    DescribeEvents = 'DescribeEvents'


class Action252(Enum):
    DescribeHsmClientCertificates = 'DescribeHsmClientCertificates'


class Action256(Enum):
    DescribeHsmConfigurations = 'DescribeHsmConfigurations'


class Action260(Enum):
    DescribeLoggingStatus = 'DescribeLoggingStatus'


class Action264(Enum):
    DescribeNodeConfigurationOptions = 'DescribeNodeConfigurationOptions'


class Action268(Enum):
    DescribeOrderableClusterOptions = 'DescribeOrderableClusterOptions'


class Action272(Enum):
    DescribePartners = 'DescribePartners'


class Action276(Enum):
    DescribeReservedNodeExchangeStatus = 'DescribeReservedNodeExchangeStatus'


class Action280(Enum):
    DescribeReservedNodeOfferings = 'DescribeReservedNodeOfferings'


class Action284(Enum):
    DescribeReservedNodes = 'DescribeReservedNodes'


class Action288(Enum):
    DescribeResize = 'DescribeResize'


class TargetActionType(Enum):
    ResizeCluster = 'ResizeCluster'
    PauseCluster = 'PauseCluster'
    ResumeCluster = 'ResumeCluster'


class Action292(Enum):
    DescribeScheduledActions = 'DescribeScheduledActions'


class Action296(Enum):
    DescribeSnapshotCopyGrants = 'DescribeSnapshotCopyGrants'


class Action300(Enum):
    DescribeSnapshotSchedules = 'DescribeSnapshotSchedules'


class Action304(Enum):
    DescribeStorage = 'DescribeStorage'


class Action308(Enum):
    DescribeTableRestoreStatus = 'DescribeTableRestoreStatus'


class Action312(Enum):
    DescribeTags = 'DescribeTags'


class Action316(Enum):
    DescribeUsageLimits = 'DescribeUsageLimits'


class Action320(Enum):
    DisableLogging = 'DisableLogging'


class Action324(Enum):
    DisableSnapshotCopy = 'DisableSnapshotCopy'


class Action328(Enum):
    DisassociateDataShareConsumer = 'DisassociateDataShareConsumer'


class Action332(Enum):
    EnableLogging = 'EnableLogging'


class LogExports(RootModel[List[String]]):
    root: List[String]


class Action336(Enum):
    EnableSnapshotCopy = 'EnableSnapshotCopy'


class Action340(Enum):
    GetClusterCredentials = 'GetClusterCredentials'


class DbGroups(RootModel[List[String]]):
    root: List[String]


class Action344(Enum):
    GetClusterCredentialsWithIAM = 'GetClusterCredentialsWithIAM'


class ActionType3(Enum):
    restore_cluster = 'restore-cluster'
    resize_cluster = 'resize-cluster'


class Action348(Enum):
    GetReservedNodeExchangeConfigurationOptions = (
        'GetReservedNodeExchangeConfigurationOptions'
    )


class Action352(Enum):
    GetReservedNodeExchangeOfferings = 'GetReservedNodeExchangeOfferings'


class Action356(Enum):
    ModifyAquaConfiguration = 'ModifyAquaConfiguration'


class Action360(Enum):
    ModifyAuthenticationProfile = 'ModifyAuthenticationProfile'


class Action364(Enum):
    ModifyCluster = 'ModifyCluster'


class Action368(Enum):
    ModifyClusterDbRevision = 'ModifyClusterDbRevision'


class Action372(Enum):
    ModifyClusterIamRoles = 'ModifyClusterIamRoles'


class AddIamRoles(RootModel[List[String]]):
    root: List[String]


class RemoveIamRoles(RootModel[List[String]]):
    root: List[String]


class Action376(Enum):
    ModifyClusterMaintenance = 'ModifyClusterMaintenance'


class Action380(Enum):
    ModifyClusterParameterGroup = 'ModifyClusterParameterGroup'


class Action384(Enum):
    ModifyClusterSnapshot = 'ModifyClusterSnapshot'


class Action388(Enum):
    ModifyClusterSnapshotSchedule = 'ModifyClusterSnapshotSchedule'


class Action392(Enum):
    ModifyClusterSubnetGroup = 'ModifyClusterSubnetGroup'


class Action396(Enum):
    ModifyEndpointAccess = 'ModifyEndpointAccess'


class Action400(Enum):
    ModifyEventSubscription = 'ModifyEventSubscription'


class Action404(Enum):
    ModifyScheduledAction = 'ModifyScheduledAction'


class Action408(Enum):
    ModifySnapshotCopyRetentionPeriod = 'ModifySnapshotCopyRetentionPeriod'


class Action412(Enum):
    ModifySnapshotSchedule = 'ModifySnapshotSchedule'


class Action416(Enum):
    ModifyUsageLimit = 'ModifyUsageLimit'


class Action420(Enum):
    PauseCluster = 'PauseCluster'


class Action424(Enum):
    PurchaseReservedNodeOffering = 'PurchaseReservedNodeOffering'


class Action428(Enum):
    RebootCluster = 'RebootCluster'


class Action432(Enum):
    RejectDataShare = 'RejectDataShare'


class Action436(Enum):
    ResetClusterParameterGroup = 'ResetClusterParameterGroup'


class Action440(Enum):
    ResizeCluster = 'ResizeCluster'


class Action444(Enum):
    RestoreFromClusterSnapshot = 'RestoreFromClusterSnapshot'


class Action448(Enum):
    RestoreTableFromClusterSnapshot = 'RestoreTableFromClusterSnapshot'


class Action452(Enum):
    ResumeCluster = 'ResumeCluster'


class Action456(Enum):
    RevokeClusterSecurityGroupIngress = 'RevokeClusterSecurityGroupIngress'


class Action460(Enum):
    RevokeEndpointAccess = 'RevokeEndpointAccess'


class Action464(Enum):
    RevokeSnapshotAccess = 'RevokeSnapshotAccess'


class Action468(Enum):
    RotateEncryptionKey = 'RotateEncryptionKey'


class Status4(Enum):
    Active = 'Active'
    Inactive = 'Inactive'
    RuntimeFailure = 'RuntimeFailure'
    ConnectionFailure = 'ConnectionFailure'


class Action472(Enum):
    UpdatePartnerStatus = 'UpdatePartnerStatus'


class AcceptReservedNodeExchangeInputMessage(BaseModel):
    ReservedNodeId: String
    TargetReservedNodeOfferingId: String


class AccountWithRestoreAccess(BaseModel):
    AccountAlias: Optional[String] = None
    AccountId: Optional[String] = None


class AccountsWithRestoreAccessList(RootModel[List[AccountWithRestoreAccess]]):
    root: List[AccountWithRestoreAccess]


class AquaConfiguration(BaseModel):
    AquaConfigurationStatus_1: Optional[AquaConfigurationStatus] = Field(
        None, alias='AquaConfigurationStatus'
    )
    AquaStatus_1: Optional[AquaStatus] = Field(None, alias='AquaStatus')


class AssociateDataShareConsumerMessage(BaseModel):
    AssociateEntireAccount: Optional[BooleanOptional] = None
    ConsumerArn: Optional[String] = None
    ConsumerRegion: Optional[String] = None
    DataShareArn: String


class AttributeNameList(RootModel[List[String]]):
    root: List[String]


class AttributeValueTarget(BaseModel):
    AttributeValue: Optional[String] = None


class AuthenticationProfile(BaseModel):
    AuthenticationProfileContent: Optional[String] = None
    AuthenticationProfileName: Optional[AuthenticationProfileNameString] = None


class AuthenticationProfileList(RootModel[List[AuthenticationProfile]]):
    root: List[AuthenticationProfile]


class AuthorizeClusterSecurityGroupIngressMessage(BaseModel):
    CIDRIP: Optional[String] = None
    ClusterSecurityGroupName: String
    EC2SecurityGroupName: Optional[String] = None
    EC2SecurityGroupOwnerId: Optional[String] = None


class AuthorizeDataShareMessage(BaseModel):
    ConsumerIdentifier: String
    DataShareArn: String


class AuthorizeEndpointAccessMessage(BaseModel):
    Account: String
    ClusterIdentifier: Optional[String] = None
    VpcIds: Optional[VpcIdentifierList] = None


class AuthorizeSnapshotAccessMessage(BaseModel):
    AccountWithRestoreAccess: String
    SnapshotArn: Optional[String] = None
    SnapshotClusterIdentifier: Optional[String] = None
    SnapshotIdentifier: Optional[String] = None


class AvailabilityZone(BaseModel):
    Name: Optional[String] = None
    SupportedPlatforms: Optional[SupportedPlatformsList] = None


class AvailabilityZoneList(RootModel[List[AvailabilityZone]]):
    root: List[AvailabilityZone]


class CancelResizeMessage(BaseModel):
    ClusterIdentifier: String


class ClusterAssociatedToSchedule(BaseModel):
    ClusterIdentifier: Optional[String] = None
    ScheduleAssociationState: Optional[ScheduleState] = None


class ClusterCredentials(BaseModel):
    DbPassword: Optional[SensitiveString] = None
    DbUser: Optional[String] = None
    Expiration: Optional[TStamp] = None


class ClusterExtendedCredentials(BaseModel):
    DbPassword: Optional[SensitiveString] = None
    DbUser: Optional[String] = None
    Expiration: Optional[TStamp] = None
    NextRefreshTime: Optional[TStamp] = None


class ClusterIamRole(BaseModel):
    ApplyStatus: Optional[String] = None
    IamRoleArn: Optional[String] = None


class ClusterIamRoleList(RootModel[List[ClusterIamRole]]):
    root: List[ClusterIamRole]


class ClusterNode(BaseModel):
    NodeRole: Optional[String] = None
    PrivateIPAddress: Optional[String] = None
    PublicIPAddress: Optional[String] = None


class ClusterNodesList(RootModel[List[ClusterNode]]):
    root: List[ClusterNode]


class ClusterParameterGroup(BaseModel):
    Description: Optional[String] = None
    ParameterGroupFamily: Optional[String] = None
    ParameterGroupName: Optional[String] = None
    Tags: Optional[TagList] = None


class ClusterParameterGroupNameMessage(BaseModel):
    ParameterGroupName: Optional[String] = None
    ParameterGroupStatus: Optional[String] = None


class ClusterParameterStatus(BaseModel):
    ParameterApplyErrorDescription: Optional[String] = None
    ParameterApplyStatus: Optional[String] = None
    ParameterName: Optional[String] = None


class ClusterParameterStatusList(RootModel[List[ClusterParameterStatus]]):
    root: List[ClusterParameterStatus]


class ClusterSecurityGroupMembership(BaseModel):
    ClusterSecurityGroupName: Optional[String] = None
    Status: Optional[String] = None


class ClusterSecurityGroupMembershipList(
    RootModel[List[ClusterSecurityGroupMembership]]
):
    root: List[ClusterSecurityGroupMembership]


class ClusterSecurityGroupNameList(RootModel[List[String]]):
    root: List[String]


class ClusterSnapshotCopyStatus(BaseModel):
    DestinationRegion: Optional[String] = None
    ManualSnapshotRetentionPeriod: Optional[Integer] = None
    RetentionPeriod: Optional[Long] = None
    SnapshotCopyGrantName: Optional[String] = None


class ClusterVersion(BaseModel):
    ClusterParameterGroupFamily: Optional[String] = None
    ClusterVersion: Optional[String] = None
    Description: Optional[String] = None


class ClusterVersionList(RootModel[List[ClusterVersion]]):
    root: List[ClusterVersion]


class ClusterVersionsMessage(BaseModel):
    ClusterVersions: Optional[ClusterVersionList] = None
    Marker: Optional[String] = None


class CopyClusterSnapshotMessage(BaseModel):
    ManualSnapshotRetentionPeriod: Optional[IntegerOptional] = None
    SourceSnapshotClusterIdentifier: Optional[String] = None
    SourceSnapshotIdentifier: String
    TargetSnapshotIdentifier: String


class CreateAuthenticationProfileMessage(BaseModel):
    AuthenticationProfileContent: String
    AuthenticationProfileName: AuthenticationProfileNameString


class CreateAuthenticationProfileResult(BaseModel):
    AuthenticationProfileContent: Optional[String] = None
    AuthenticationProfileName: Optional[AuthenticationProfileNameString] = None


class CreateClusterParameterGroupMessage(BaseModel):
    Description: String
    ParameterGroupFamily: String
    ParameterGroupName: String
    Tags: Optional[TagList] = None


class CreateClusterParameterGroupResult(BaseModel):
    ClusterParameterGroup_1: Optional[ClusterParameterGroup] = Field(
        None, alias='ClusterParameterGroup'
    )


class CreateClusterSecurityGroupMessage(BaseModel):
    ClusterSecurityGroupName: String
    Description: String
    Tags: Optional[TagList] = None


class CreateClusterSnapshotMessage(BaseModel):
    ClusterIdentifier: String
    ManualSnapshotRetentionPeriod: Optional[IntegerOptional] = None
    SnapshotIdentifier: String
    Tags: Optional[TagList] = None


class CreateClusterSubnetGroupMessage(BaseModel):
    ClusterSubnetGroupName: String
    Description: String
    SubnetIds: SubnetIdentifierList
    Tags: Optional[TagList] = None


class CreateEndpointAccessMessage(BaseModel):
    ClusterIdentifier: Optional[String] = None
    EndpointName: String
    ResourceOwner: Optional[String] = None
    SubnetGroupName: String
    VpcSecurityGroupIds: Optional[VpcSecurityGroupIdList] = None


class CreateHsmClientCertificateMessage(BaseModel):
    HsmClientCertificateIdentifier: String
    Tags: Optional[TagList] = None


class CreateHsmConfigurationMessage(BaseModel):
    Description: String
    HsmConfigurationIdentifier: String
    HsmIpAddress: String
    HsmPartitionName: String
    HsmPartitionPassword: String
    HsmServerPublicCertificate: String
    Tags: Optional[TagList] = None


class CreateSnapshotCopyGrantMessage(BaseModel):
    KmsKeyId: Optional[String] = None
    SnapshotCopyGrantName: String
    Tags: Optional[TagList] = None


class CreateTagsMessage(BaseModel):
    ResourceName: String
    Tags: TagList


class CreateUsageLimitMessage(BaseModel):
    Amount: Long
    BreachAction: Optional[UsageLimitBreachAction] = None
    ClusterIdentifier: String
    FeatureType: UsageLimitFeatureType
    LimitType: UsageLimitLimitType
    Period: Optional[UsageLimitPeriod] = None
    Tags: Optional[TagList] = None


class CustomerStorageMessage(BaseModel):
    TotalBackupSizeInMegaBytes: Optional[Double] = None
    TotalProvisionedStorageInMegaBytes: Optional[Double] = None


class DataShareAssociation(BaseModel):
    ConsumerIdentifier: Optional[String] = None
    ConsumerRegion: Optional[String] = None
    CreatedDate: Optional[TStamp] = None
    Status: Optional[DataShareStatus] = None
    StatusChangeDate: Optional[TStamp] = None


class DataShareAssociationList(RootModel[List[DataShareAssociation]]):
    root: List[DataShareAssociation]


class DataTransferProgress(BaseModel):
    CurrentRateInMegaBytesPerSecond: Optional[DoubleOptional] = None
    DataTransferredInMegaBytes: Optional[Long] = None
    ElapsedTimeInSeconds: Optional[LongOptional] = None
    EstimatedTimeToCompletionInSeconds: Optional[LongOptional] = None
    Status: Optional[String] = None
    TotalDataInMegaBytes: Optional[Long] = None


class DbGroupList(RootModel[List[String]]):
    root: List[String]


class DeauthorizeDataShareMessage(BaseModel):
    ConsumerIdentifier: String
    DataShareArn: String


class DeferredMaintenanceWindow(BaseModel):
    DeferMaintenanceEndTime: Optional[TStamp] = None
    DeferMaintenanceIdentifier: Optional[String] = None
    DeferMaintenanceStartTime: Optional[TStamp] = None


class DeferredMaintenanceWindowsList(RootModel[List[DeferredMaintenanceWindow]]):
    root: List[DeferredMaintenanceWindow]


class DeleteClusterMessage(BaseModel):
    ClusterIdentifier: String
    FinalClusterSnapshotIdentifier: Optional[String] = None
    FinalClusterSnapshotRetentionPeriod: Optional[IntegerOptional] = None
    SkipFinalClusterSnapshot: Optional[Boolean] = None


class DeleteClusterParameterGroupMessage(BaseModel):
    ParameterGroupName: String


class DeleteClusterSecurityGroupMessage(BaseModel):
    ClusterSecurityGroupName: String


class DeleteClusterSnapshotMessage(BaseModel):
    SnapshotClusterIdentifier: Optional[String] = None
    SnapshotIdentifier: String


class DeleteClusterSnapshotMessageList(RootModel[List[DeleteClusterSnapshotMessage]]):
    root: List[DeleteClusterSnapshotMessage]


class DeleteClusterSubnetGroupMessage(BaseModel):
    ClusterSubnetGroupName: String


class DeleteEndpointAccessMessage(BaseModel):
    EndpointName: String


class DeleteEventSubscriptionMessage(BaseModel):
    SubscriptionName: String


class DeleteHsmClientCertificateMessage(BaseModel):
    HsmClientCertificateIdentifier: String


class DeleteHsmConfigurationMessage(BaseModel):
    HsmConfigurationIdentifier: String


class DeleteScheduledActionMessage(BaseModel):
    ScheduledActionName: String


class DeleteSnapshotCopyGrantMessage(BaseModel):
    SnapshotCopyGrantName: String


class DeleteSnapshotScheduleMessage(BaseModel):
    ScheduleIdentifier: String


class DeleteTagsMessage(BaseModel):
    ResourceName: String
    TagKeys: TagKeyList


class DeleteUsageLimitMessage(BaseModel):
    UsageLimitId: String


class DescribeAccountAttributesMessage(BaseModel):
    AttributeNames: Optional[AttributeNameList] = None


class DescribeAuthenticationProfilesResult(BaseModel):
    AuthenticationProfiles: Optional[AuthenticationProfileList] = None


class DescribeClusterDbRevisionsMessage(BaseModel):
    ClusterIdentifier: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeClusterParameterGroupsMessage(BaseModel):
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    ParameterGroupName: Optional[String] = None
    TagKeys: Optional[TagKeyList] = None
    TagValues: Optional[TagValueList] = None


class DescribeClusterParametersMessage(BaseModel):
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    ParameterGroupName: String
    Source: Optional[String] = None


class DescribeClusterSecurityGroupsMessage(BaseModel):
    ClusterSecurityGroupName: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    TagKeys: Optional[TagKeyList] = None
    TagValues: Optional[TagValueList] = None


class DescribeClusterSubnetGroupsMessage(BaseModel):
    ClusterSubnetGroupName: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    TagKeys: Optional[TagKeyList] = None
    TagValues: Optional[TagValueList] = None


class DescribeClusterTracksMessage(BaseModel):
    MaintenanceTrackName: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeClusterVersionsMessage(BaseModel):
    ClusterParameterGroupFamily: Optional[String] = None
    ClusterVersion: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeClustersMessage(BaseModel):
    ClusterIdentifier: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    TagKeys: Optional[TagKeyList] = None
    TagValues: Optional[TagValueList] = None


class DescribeDataSharesForConsumerMessage(BaseModel):
    ConsumerArn: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    Status: Optional[DataShareStatusForConsumer] = None


class DescribeDataSharesForProducerMessage(BaseModel):
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    ProducerArn: Optional[String] = None
    Status: Optional[DataShareStatusForProducer] = None


class DescribeDataSharesMessage(BaseModel):
    DataShareArn: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeDefaultClusterParametersMessage(BaseModel):
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    ParameterGroupFamily: String


class DescribeEndpointAccessMessage(BaseModel):
    ClusterIdentifier: Optional[String] = None
    EndpointName: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    ResourceOwner: Optional[String] = None
    VpcId: Optional[String] = None


class DescribeEndpointAuthorizationMessage(BaseModel):
    Account: Optional[String] = None
    ClusterIdentifier: Optional[String] = None
    Grantee: Optional[BooleanOptional] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None


class DescribeEventCategoriesMessage(BaseModel):
    SourceType: Optional[String] = None


class DescribeEventSubscriptionsMessage(BaseModel):
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    SubscriptionName: Optional[String] = None
    TagKeys: Optional[TagKeyList] = None
    TagValues: Optional[TagValueList] = None


class DescribeEventsMessage(BaseModel):
    Duration: Optional[IntegerOptional] = None
    EndTime: Optional[TStamp] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    SourceIdentifier: Optional[String] = None
    SourceType_1: Optional[SourceType] = Field(None, alias='SourceType')
    StartTime: Optional[TStamp] = None


class DescribeHsmClientCertificatesMessage(BaseModel):
    HsmClientCertificateIdentifier: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    TagKeys: Optional[TagKeyList] = None
    TagValues: Optional[TagValueList] = None


class DescribeHsmConfigurationsMessage(BaseModel):
    HsmConfigurationIdentifier: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    TagKeys: Optional[TagKeyList] = None
    TagValues: Optional[TagValueList] = None


class DescribeLoggingStatusMessage(BaseModel):
    ClusterIdentifier: String


class DescribeOrderableClusterOptionsMessage(BaseModel):
    ClusterVersion: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    NodeType: Optional[String] = None


class DescribePartnersInputMessage(BaseModel):
    AccountId: PartnerIntegrationAccountId
    ClusterIdentifier: PartnerIntegrationClusterIdentifier
    DatabaseName: Optional[PartnerIntegrationDatabaseName] = None
    PartnerName: Optional[PartnerIntegrationPartnerName] = None


class DescribeReservedNodeExchangeStatusInputMessage(BaseModel):
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    ReservedNodeExchangeRequestId: Optional[String] = None
    ReservedNodeId: Optional[String] = None


class DescribeReservedNodeOfferingsMessage(BaseModel):
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    ReservedNodeOfferingId: Optional[String] = None


class DescribeReservedNodesMessage(BaseModel):
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    ReservedNodeId: Optional[String] = None


class DescribeResizeMessage(BaseModel):
    ClusterIdentifier: String


class DescribeSnapshotCopyGrantsMessage(BaseModel):
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    SnapshotCopyGrantName: Optional[String] = None
    TagKeys: Optional[TagKeyList] = None
    TagValues: Optional[TagValueList] = None


class DescribeSnapshotSchedulesMessage(BaseModel):
    ClusterIdentifier: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    ScheduleIdentifier: Optional[String] = None
    TagKeys: Optional[TagKeyList] = None
    TagValues: Optional[TagValueList] = None


class DescribeTableRestoreStatusMessage(BaseModel):
    ClusterIdentifier: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    TableRestoreRequestId: Optional[String] = None


class DescribeTagsMessage(BaseModel):
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    ResourceName: Optional[String] = None
    ResourceType: Optional[String] = None
    TagKeys: Optional[TagKeyList] = None
    TagValues: Optional[TagValueList] = None


class DescribeUsageLimitsMessage(BaseModel):
    ClusterIdentifier: Optional[String] = None
    FeatureType: Optional[UsageLimitFeatureType] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    TagKeys: Optional[TagKeyList] = None
    TagValues: Optional[TagValueList] = None
    UsageLimitId: Optional[String] = None


class DisableLoggingMessage(BaseModel):
    ClusterIdentifier: String


class DisableSnapshotCopyMessage(BaseModel):
    ClusterIdentifier: String


class DisassociateDataShareConsumerMessage(BaseModel):
    ConsumerArn: Optional[String] = None
    ConsumerRegion: Optional[String] = None
    DataShareArn: String
    DisassociateEntireAccount: Optional[BooleanOptional] = None


class EC2SecurityGroup(BaseModel):
    EC2SecurityGroupName: Optional[String] = None
    EC2SecurityGroupOwnerId: Optional[String] = None
    Status: Optional[String] = None
    Tags: Optional[TagList] = None


class EC2SecurityGroupList(RootModel[List[EC2SecurityGroup]]):
    root: List[EC2SecurityGroup]


class ElasticIpStatus(BaseModel):
    ElasticIp: Optional[String] = None
    Status: Optional[String] = None


class EligibleTracksToUpdateList(RootModel[List[UpdateTarget]]):
    root: List[UpdateTarget]


class EnableSnapshotCopyMessage(BaseModel):
    ClusterIdentifier: String
    DestinationRegion: String
    ManualSnapshotRetentionPeriod: Optional[IntegerOptional] = None
    RetentionPeriod: Optional[IntegerOptional] = None
    SnapshotCopyGrantName: Optional[String] = None


class EndpointAuthorization(BaseModel):
    AllowedAllVPCs: Optional[Boolean] = None
    AllowedVPCs: Optional[VpcIdentifierList] = None
    AuthorizeTime: Optional[TStamp] = None
    ClusterIdentifier: Optional[String] = None
    ClusterStatus: Optional[String] = None
    EndpointCount: Optional[Integer] = None
    Grantee: Optional[String] = None
    Grantor: Optional[String] = None
    Status: Optional[AuthorizationStatus] = None


class EndpointAuthorizations(RootModel[List[EndpointAuthorization]]):
    root: List[EndpointAuthorization]


class EventCategoriesList(RootModel[List[String]]):
    root: List[String]


class EventInfoMap(BaseModel):
    EventCategories: Optional[EventCategoriesList] = None
    EventDescription: Optional[String] = None
    EventId: Optional[String] = None
    Severity: Optional[String] = None


class EventInfoMapList(RootModel[List[EventInfoMap]]):
    root: List[EventInfoMap]


class GetClusterCredentialsMessage(BaseModel):
    AutoCreate: Optional[BooleanOptional] = None
    ClusterIdentifier: String
    DbGroups: Optional[DbGroupList] = None
    DbName: Optional[String] = None
    DbUser: String
    DurationSeconds: Optional[IntegerOptional] = None


class GetClusterCredentialsWithIAMMessage(BaseModel):
    ClusterIdentifier: String
    DbName: Optional[String] = None
    DurationSeconds: Optional[IntegerOptional] = None


class GetReservedNodeExchangeConfigurationOptionsInputMessage(BaseModel):
    ActionType: ReservedNodeExchangeActionType
    ClusterIdentifier: Optional[String] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    SnapshotIdentifier: Optional[String] = None


class GetReservedNodeExchangeOfferingsInputMessage(BaseModel):
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    ReservedNodeId: String


class HsmClientCertificate(BaseModel):
    HsmClientCertificateIdentifier: Optional[String] = None
    HsmClientCertificatePublicKey: Optional[String] = None
    Tags: Optional[TagList] = None


class HsmClientCertificateList(RootModel[List[HsmClientCertificate]]):
    root: List[HsmClientCertificate]


class HsmClientCertificateMessage(BaseModel):
    HsmClientCertificates: Optional[HsmClientCertificateList] = None
    Marker: Optional[String] = None


class HsmConfiguration(BaseModel):
    Description: Optional[String] = None
    HsmConfigurationIdentifier: Optional[String] = None
    HsmIpAddress: Optional[String] = None
    HsmPartitionName: Optional[String] = None
    Tags: Optional[TagList] = None


class HsmConfigurationList(RootModel[List[HsmConfiguration]]):
    root: List[HsmConfiguration]


class HsmConfigurationMessage(BaseModel):
    HsmConfigurations: Optional[HsmConfigurationList] = None
    Marker: Optional[String] = None


class HsmStatus(BaseModel):
    HsmClientCertificateIdentifier: Optional[String] = None
    HsmConfigurationIdentifier: Optional[String] = None
    Status: Optional[String] = None


class IPRange(BaseModel):
    CIDRIP: Optional[String] = None
    Status: Optional[String] = None
    Tags: Optional[TagList] = None


class IPRangeList(RootModel[List[IPRange]]):
    root: List[IPRange]


class IamRoleArnList(RootModel[List[String]]):
    root: List[String]


class ImportTablesCompleted(RootModel[List[String]]):
    root: List[String]


class ImportTablesInProgress(RootModel[List[String]]):
    root: List[String]


class ImportTablesNotStarted(RootModel[List[String]]):
    root: List[String]


class LogTypeList(RootModel[List[String]]):
    root: List[String]


class LoggingStatus(BaseModel):
    BucketName: Optional[String] = None
    LastFailureMessage: Optional[String] = None
    LastFailureTime: Optional[TStamp] = None
    LastSuccessfulDeliveryTime: Optional[TStamp] = None
    LogDestinationType_1: Optional[LogDestinationType] = Field(
        None, alias='LogDestinationType'
    )
    LogExports: Optional[LogTypeList] = None
    LoggingEnabled: Optional[Boolean] = None
    S3KeyPrefix: Optional[String] = None


class MaintenanceTrack(BaseModel):
    DatabaseVersion: Optional[String] = None
    MaintenanceTrackName: Optional[String] = None
    UpdateTargets: Optional[EligibleTracksToUpdateList] = None


class ModifyAquaInputMessage(BaseModel):
    AquaConfigurationStatus_1: Optional[AquaConfigurationStatus] = Field(
        None, alias='AquaConfigurationStatus'
    )
    ClusterIdentifier: String


class ModifyAquaOutputMessage(BaseModel):
    AquaConfiguration_1: Optional[AquaConfiguration] = Field(
        None, alias='AquaConfiguration'
    )


class ModifyAuthenticationProfileMessage(BaseModel):
    AuthenticationProfileContent: String
    AuthenticationProfileName: AuthenticationProfileNameString


class ModifyAuthenticationProfileResult(BaseModel):
    AuthenticationProfileContent: Optional[String] = None
    AuthenticationProfileName: Optional[AuthenticationProfileNameString] = None


class ModifyClusterDbRevisionMessage(BaseModel):
    ClusterIdentifier: String
    RevisionTarget: String


class ModifyClusterIamRolesMessage(BaseModel):
    AddIamRoles: Optional[IamRoleArnList] = None
    ClusterIdentifier: String
    DefaultIamRoleArn: Optional[String] = None
    RemoveIamRoles: Optional[IamRoleArnList] = None


class ModifyClusterMaintenanceMessage(BaseModel):
    ClusterIdentifier: String
    DeferMaintenance: Optional[BooleanOptional] = None
    DeferMaintenanceDuration: Optional[IntegerOptional] = None
    DeferMaintenanceEndTime: Optional[TStamp] = None
    DeferMaintenanceIdentifier: Optional[String] = None
    DeferMaintenanceStartTime: Optional[TStamp] = None


class ModifyClusterMessage(BaseModel):
    AllowVersionUpgrade: Optional[BooleanOptional] = None
    AutomatedSnapshotRetentionPeriod: Optional[IntegerOptional] = None
    AvailabilityZone: Optional[String] = None
    AvailabilityZoneRelocation: Optional[BooleanOptional] = None
    ClusterIdentifier: String
    ClusterParameterGroupName: Optional[String] = None
    ClusterSecurityGroups: Optional[ClusterSecurityGroupNameList] = None
    ClusterType: Optional[String] = None
    ClusterVersion: Optional[String] = None
    ElasticIp: Optional[String] = None
    Encrypted: Optional[BooleanOptional] = None
    EnhancedVpcRouting: Optional[BooleanOptional] = None
    HsmClientCertificateIdentifier: Optional[String] = None
    HsmConfigurationIdentifier: Optional[String] = None
    KmsKeyId: Optional[String] = None
    MaintenanceTrackName: Optional[String] = None
    ManualSnapshotRetentionPeriod: Optional[IntegerOptional] = None
    MasterUserPassword: Optional[String] = None
    NewClusterIdentifier: Optional[String] = None
    NodeType: Optional[String] = None
    NumberOfNodes: Optional[IntegerOptional] = None
    Port: Optional[IntegerOptional] = None
    PreferredMaintenanceWindow: Optional[String] = None
    PubliclyAccessible: Optional[BooleanOptional] = None
    VpcSecurityGroupIds: Optional[VpcSecurityGroupIdList] = None


class ModifyClusterSnapshotMessage(BaseModel):
    Force: Optional[Boolean] = None
    ManualSnapshotRetentionPeriod: Optional[IntegerOptional] = None
    SnapshotIdentifier: String


class ModifyClusterSnapshotScheduleMessage(BaseModel):
    ClusterIdentifier: String
    DisassociateSchedule: Optional[BooleanOptional] = None
    ScheduleIdentifier: Optional[String] = None


class ModifyClusterSubnetGroupMessage(BaseModel):
    ClusterSubnetGroupName: String
    Description: Optional[String] = None
    SubnetIds: SubnetIdentifierList


class ModifyEndpointAccessMessage(BaseModel):
    EndpointName: String
    VpcSecurityGroupIds: Optional[VpcSecurityGroupIdList] = None


class ModifySnapshotCopyRetentionPeriodMessage(BaseModel):
    ClusterIdentifier: String
    Manual: Optional[Boolean] = None
    RetentionPeriod: Integer


class ModifyUsageLimitMessage(BaseModel):
    Amount: Optional[LongOptional] = None
    BreachAction: Optional[UsageLimitBreachAction] = None
    UsageLimitId: String


class NetworkInterface(BaseModel):
    AvailabilityZone: Optional[String] = None
    NetworkInterfaceId: Optional[String] = None
    PrivateIpAddress: Optional[String] = None
    SubnetId: Optional[String] = None


class NetworkInterfaceList(RootModel[List[NetworkInterface]]):
    root: List[NetworkInterface]


class NodeConfigurationOption(BaseModel):
    EstimatedDiskUtilizationPercent: Optional[DoubleOptional] = None
    Mode_1: Optional[Mode] = Field(None, alias='Mode')
    NodeType: Optional[String] = None
    NumberOfNodes: Optional[Integer] = None


class NodeConfigurationOptionList(RootModel[List[NodeConfigurationOption]]):
    root: List[NodeConfigurationOption]


class NodeConfigurationOptionsFilter(BaseModel):
    Name: Optional[NodeConfigurationOptionsFilterName] = None
    Operator: Optional[OperatorType] = None
    Values: Optional[ValueStringList] = None


class NodeConfigurationOptionsFilterList(
    RootModel[List[NodeConfigurationOptionsFilter]]
):
    root: List[NodeConfigurationOptionsFilter]


class NodeConfigurationOptionsMessage(BaseModel):
    Marker: Optional[String] = None
    NodeConfigurationOptionList_1: Optional[NodeConfigurationOptionList] = Field(
        None, alias='NodeConfigurationOptionList'
    )


class OrderableClusterOption(BaseModel):
    AvailabilityZones: Optional[AvailabilityZoneList] = None
    ClusterType: Optional[String] = None
    ClusterVersion: Optional[String] = None
    NodeType: Optional[String] = None


class OrderableClusterOptionsList(RootModel[List[OrderableClusterOption]]):
    root: List[OrderableClusterOption]


class OrderableClusterOptionsMessage(BaseModel):
    Marker: Optional[String] = None
    OrderableClusterOptions: Optional[OrderableClusterOptionsList] = None


class Parameter(BaseModel):
    AllowedValues: Optional[String] = None
    ApplyType: Optional[ParameterApplyType] = None
    DataType: Optional[String] = None
    Description: Optional[String] = None
    IsModifiable: Optional[Boolean] = None
    MinimumEngineVersion: Optional[String] = None
    ParameterName: Optional[String] = None
    ParameterValue: Optional[String] = None
    Source: Optional[String] = None


class ParameterGroupList(RootModel[List[ClusterParameterGroup]]):
    root: List[ClusterParameterGroup]


class ParametersList(RootModel[List[Parameter]]):
    root: List[Parameter]


class PartnerIntegrationInfo(BaseModel):
    CreatedAt: Optional[TStamp] = None
    DatabaseName: Optional[PartnerIntegrationDatabaseName] = None
    PartnerName: Optional[PartnerIntegrationPartnerName] = None
    Status: Optional[PartnerIntegrationStatus] = None
    StatusMessage: Optional[PartnerIntegrationStatusMessage] = None
    UpdatedAt: Optional[TStamp] = None


class PartnerIntegrationInfoList(RootModel[List[PartnerIntegrationInfo]]):
    root: List[PartnerIntegrationInfo]


class PartnerIntegrationInputMessage(BaseModel):
    AccountId: PartnerIntegrationAccountId
    ClusterIdentifier: PartnerIntegrationClusterIdentifier
    DatabaseName: PartnerIntegrationDatabaseName
    PartnerName: PartnerIntegrationPartnerName


class PartnerIntegrationOutputMessage(BaseModel):
    DatabaseName: Optional[PartnerIntegrationDatabaseName] = None
    PartnerName: Optional[PartnerIntegrationPartnerName] = None


class PauseClusterMessage(BaseModel):
    ClusterIdentifier: String


class PendingActionsList(RootModel[List[String]]):
    root: List[String]


class PendingModifiedValues(BaseModel):
    AutomatedSnapshotRetentionPeriod: Optional[IntegerOptional] = None
    ClusterIdentifier: Optional[String] = None
    ClusterType: Optional[String] = None
    ClusterVersion: Optional[String] = None
    EncryptionType: Optional[String] = None
    EnhancedVpcRouting: Optional[BooleanOptional] = None
    MaintenanceTrackName: Optional[String] = None
    MasterUserPassword: Optional[String] = None
    NodeType: Optional[String] = None
    NumberOfNodes: Optional[IntegerOptional] = None
    PubliclyAccessible: Optional[BooleanOptional] = None


class PurchaseReservedNodeOfferingMessage(BaseModel):
    NodeCount: Optional[IntegerOptional] = None
    ReservedNodeOfferingId: String


class RebootClusterMessage(BaseModel):
    ClusterIdentifier: String


class RecurringCharge(BaseModel):
    RecurringChargeAmount: Optional[Double] = None
    RecurringChargeFrequency: Optional[String] = None


class RecurringChargeList(RootModel[List[RecurringCharge]]):
    root: List[RecurringCharge]


class RejectDataShareMessage(BaseModel):
    DataShareArn: String


class ReservedNode(BaseModel):
    CurrencyCode: Optional[String] = None
    Duration: Optional[Integer] = None
    FixedPrice: Optional[Double] = None
    NodeCount: Optional[Integer] = None
    NodeType: Optional[String] = None
    OfferingType: Optional[String] = None
    RecurringCharges: Optional[RecurringChargeList] = None
    ReservedNodeId: Optional[String] = None
    ReservedNodeOfferingId: Optional[String] = None
    ReservedNodeOfferingType_1: Optional[ReservedNodeOfferingType] = Field(
        None, alias='ReservedNodeOfferingType'
    )
    StartTime: Optional[TStamp] = None
    State: Optional[String] = None
    UsagePrice: Optional[Double] = None


class ReservedNodeExchangeStatus(BaseModel):
    RequestTime: Optional[TStamp] = None
    ReservedNodeExchangeRequestId: Optional[String] = None
    SourceReservedNodeCount: Optional[Integer] = None
    SourceReservedNodeId: Optional[String] = None
    SourceReservedNodeType: Optional[String] = None
    Status: Optional[ReservedNodeExchangeStatusType] = None
    TargetReservedNodeCount: Optional[Integer] = None
    TargetReservedNodeOfferingId: Optional[String] = None
    TargetReservedNodeType: Optional[String] = None


class ReservedNodeExchangeStatusList(RootModel[List[ReservedNodeExchangeStatus]]):
    root: List[ReservedNodeExchangeStatus]


class ReservedNodeList(RootModel[List[ReservedNode]]):
    root: List[ReservedNode]


class ReservedNodeOffering(BaseModel):
    CurrencyCode: Optional[String] = None
    Duration: Optional[Integer] = None
    FixedPrice: Optional[Double] = None
    NodeType: Optional[String] = None
    OfferingType: Optional[String] = None
    RecurringCharges: Optional[RecurringChargeList] = None
    ReservedNodeOfferingId: Optional[String] = None
    ReservedNodeOfferingType_1: Optional[ReservedNodeOfferingType] = Field(
        None, alias='ReservedNodeOfferingType'
    )
    UsagePrice: Optional[Double] = None


class ReservedNodeOfferingList(RootModel[List[ReservedNodeOffering]]):
    root: List[ReservedNodeOffering]


class ReservedNodeOfferingsMessage(BaseModel):
    Marker: Optional[String] = None
    ReservedNodeOfferings: Optional[ReservedNodeOfferingList] = None


class ReservedNodesMessage(BaseModel):
    Marker: Optional[String] = None
    ReservedNodes: Optional[ReservedNodeList] = None


class ResetClusterParameterGroupMessage(BaseModel):
    ParameterGroupName: String
    Parameters: Optional[ParametersList] = None
    ResetAllParameters: Optional[Boolean] = None


class ResizeClusterMessage(BaseModel):
    Classic: Optional[BooleanOptional] = None
    ClusterIdentifier: String
    ClusterType: Optional[String] = None
    NodeType: Optional[String] = None
    NumberOfNodes: Optional[IntegerOptional] = None
    ReservedNodeId: Optional[String] = None
    TargetReservedNodeOfferingId: Optional[String] = None


class ResizeInfo(BaseModel):
    AllowCancelResize: Optional[Boolean] = None
    ResizeType: Optional[String] = None


class ResizeProgressMessage(BaseModel):
    AvgResizeRateInMegaBytesPerSecond: Optional[DoubleOptional] = None
    DataTransferProgressPercent: Optional[DoubleOptional] = None
    ElapsedTimeInSeconds: Optional[LongOptional] = None
    EstimatedTimeToCompletionInSeconds: Optional[LongOptional] = None
    ImportTablesCompleted_1: Optional[ImportTablesCompleted] = Field(
        None, alias='ImportTablesCompleted'
    )
    ImportTablesInProgress_1: Optional[ImportTablesInProgress] = Field(
        None, alias='ImportTablesInProgress'
    )
    ImportTablesNotStarted_1: Optional[ImportTablesNotStarted] = Field(
        None, alias='ImportTablesNotStarted'
    )
    Message: Optional[String] = None
    ProgressInMegaBytes: Optional[LongOptional] = None
    ResizeType: Optional[String] = None
    Status: Optional[String] = None
    TargetClusterType: Optional[String] = None
    TargetEncryptionType: Optional[String] = None
    TargetNodeType: Optional[String] = None
    TargetNumberOfNodes: Optional[IntegerOptional] = None
    TotalResizeDataInMegaBytes: Optional[LongOptional] = None


class RestorableNodeTypeList(RootModel[List[String]]):
    root: List[String]


class RestoreFromClusterSnapshotMessage(BaseModel):
    AdditionalInfo: Optional[String] = None
    AllowVersionUpgrade: Optional[BooleanOptional] = None
    AquaConfigurationStatus_1: Optional[AquaConfigurationStatus] = Field(
        None, alias='AquaConfigurationStatus'
    )
    AutomatedSnapshotRetentionPeriod: Optional[IntegerOptional] = None
    AvailabilityZone: Optional[String] = None
    AvailabilityZoneRelocation: Optional[BooleanOptional] = None
    ClusterIdentifier: String
    ClusterParameterGroupName: Optional[String] = None
    ClusterSecurityGroups: Optional[ClusterSecurityGroupNameList] = None
    ClusterSubnetGroupName: Optional[String] = None
    DefaultIamRoleArn: Optional[String] = None
    ElasticIp: Optional[String] = None
    Encrypted: Optional[BooleanOptional] = None
    EnhancedVpcRouting: Optional[BooleanOptional] = None
    HsmClientCertificateIdentifier: Optional[String] = None
    HsmConfigurationIdentifier: Optional[String] = None
    IamRoles: Optional[IamRoleArnList] = None
    KmsKeyId: Optional[String] = None
    MaintenanceTrackName: Optional[String] = None
    ManualSnapshotRetentionPeriod: Optional[IntegerOptional] = None
    NodeType: Optional[String] = None
    NumberOfNodes: Optional[IntegerOptional] = None
    OwnerAccount: Optional[String] = None
    Port: Optional[IntegerOptional] = None
    PreferredMaintenanceWindow: Optional[String] = None
    PubliclyAccessible: Optional[BooleanOptional] = None
    ReservedNodeId: Optional[String] = None
    SnapshotArn: Optional[String] = None
    SnapshotClusterIdentifier: Optional[String] = None
    SnapshotIdentifier: Optional[String] = None
    SnapshotScheduleIdentifier: Optional[String] = None
    TargetReservedNodeOfferingId: Optional[String] = None
    VpcSecurityGroupIds: Optional[VpcSecurityGroupIdList] = None


class RestoreStatus(BaseModel):
    CurrentRestoreRateInMegaBytesPerSecond: Optional[Double] = None
    ElapsedTimeInSeconds: Optional[Long] = None
    EstimatedTimeToCompletionInSeconds: Optional[Long] = None
    ProgressInMegaBytes: Optional[Long] = None
    SnapshotSizeInMegaBytes: Optional[Long] = None
    Status: Optional[String] = None


class RestoreTableFromClusterSnapshotMessage(BaseModel):
    ClusterIdentifier: String
    EnableCaseSensitiveIdentifier: Optional[BooleanOptional] = None
    NewTableName: String
    SnapshotIdentifier: String
    SourceDatabaseName: String
    SourceSchemaName: Optional[String] = None
    SourceTableName: String
    TargetDatabaseName: Optional[String] = None
    TargetSchemaName: Optional[String] = None


class ResumeClusterMessage(BaseModel):
    ClusterIdentifier: String


class RevisionTarget(BaseModel):
    DatabaseRevision: Optional[String] = None
    DatabaseRevisionReleaseDate: Optional[TStamp] = None
    Description: Optional[String] = None


class RevisionTargetsList(RootModel[List[RevisionTarget]]):
    root: List[RevisionTarget]


class RevokeClusterSecurityGroupIngressMessage(BaseModel):
    CIDRIP: Optional[String] = None
    ClusterSecurityGroupName: String
    EC2SecurityGroupName: Optional[String] = None
    EC2SecurityGroupOwnerId: Optional[String] = None


class RevokeEndpointAccessMessage(BaseModel):
    Account: Optional[String] = None
    ClusterIdentifier: Optional[String] = None
    Force: Optional[Boolean] = None
    VpcIds: Optional[VpcIdentifierList] = None


class RevokeSnapshotAccessMessage(BaseModel):
    AccountWithRestoreAccess: String
    SnapshotArn: Optional[String] = None
    SnapshotClusterIdentifier: Optional[String] = None
    SnapshotIdentifier: Optional[String] = None


class RotateEncryptionKeyMessage(BaseModel):
    ClusterIdentifier: String


class ScheduleDefinitionList(RootModel[List[String]]):
    root: List[String]


class ScheduledActionFilter(BaseModel):
    Name: ScheduledActionFilterName
    Values: ValueStringList


class ScheduledActionFilterList(RootModel[List[ScheduledActionFilter]]):
    root: List[ScheduledActionFilter]


class ScheduledActionTimeList(RootModel[List[TStamp]]):
    root: List[TStamp]


class ScheduledActionType(BaseModel):
    PauseCluster: Optional[PauseClusterMessage] = None
    ResizeCluster: Optional[ResizeClusterMessage] = None
    ResumeCluster: Optional[ResumeClusterMessage] = None


class ScheduledSnapshotTimeList(RootModel[List[TStamp]]):
    root: List[TStamp]


class Snapshot(BaseModel):
    AccountsWithRestoreAccess: Optional[AccountsWithRestoreAccessList] = None
    ActualIncrementalBackupSizeInMegaBytes: Optional[Double] = None
    AvailabilityZone: Optional[String] = None
    BackupProgressInMegaBytes: Optional[Double] = None
    ClusterCreateTime: Optional[TStamp] = None
    ClusterIdentifier: Optional[String] = None
    ClusterVersion: Optional[String] = None
    CurrentBackupRateInMegaBytesPerSecond: Optional[Double] = None
    DBName: Optional[String] = None
    ElapsedTimeInSeconds: Optional[Long] = None
    Encrypted: Optional[Boolean] = None
    EncryptedWithHSM: Optional[Boolean] = None
    EngineFullVersion: Optional[String] = None
    EnhancedVpcRouting: Optional[Boolean] = None
    EstimatedSecondsToCompletion: Optional[Long] = None
    KmsKeyId: Optional[String] = None
    MaintenanceTrackName: Optional[String] = None
    ManualSnapshotRemainingDays: Optional[IntegerOptional] = None
    ManualSnapshotRetentionPeriod: Optional[IntegerOptional] = None
    MasterUsername: Optional[String] = None
    NodeType: Optional[String] = None
    NumberOfNodes: Optional[Integer] = None
    OwnerAccount: Optional[String] = None
    Port: Optional[Integer] = None
    RestorableNodeTypes: Optional[RestorableNodeTypeList] = None
    SnapshotCreateTime: Optional[TStamp] = None
    SnapshotIdentifier: Optional[String] = None
    SnapshotRetentionStartTime: Optional[TStamp] = None
    SnapshotType: Optional[String] = None
    SourceRegion: Optional[String] = None
    Status: Optional[String] = None
    Tags: Optional[TagList] = None
    TotalBackupSizeInMegaBytes: Optional[Double] = None
    VpcId: Optional[String] = None


class SnapshotCopyGrant(BaseModel):
    KmsKeyId: Optional[String] = None
    SnapshotCopyGrantName: Optional[String] = None
    Tags: Optional[TagList] = None


class SnapshotCopyGrantList(RootModel[List[SnapshotCopyGrant]]):
    root: List[SnapshotCopyGrant]


class SnapshotCopyGrantMessage(BaseModel):
    Marker: Optional[String] = None
    SnapshotCopyGrants: Optional[SnapshotCopyGrantList] = None


class SnapshotErrorMessage(BaseModel):
    FailureCode: Optional[String] = None
    FailureReason: Optional[String] = None
    SnapshotClusterIdentifier: Optional[String] = None
    SnapshotIdentifier: Optional[String] = None


class SnapshotList(RootModel[List[Snapshot]]):
    root: List[Snapshot]


class SnapshotMessage(BaseModel):
    Marker: Optional[String] = None
    Snapshots: Optional[SnapshotList] = None


class SnapshotSortingEntity(BaseModel):
    Attribute: SnapshotAttributeToSortBy
    SortOrder: Optional[SortByOrder] = None


class SnapshotSortingEntityList(RootModel[List[SnapshotSortingEntity]]):
    root: List[SnapshotSortingEntity]


class SourceIdsList(RootModel[List[String]]):
    root: List[String]


class Subnet(BaseModel):
    SubnetAvailabilityZone: Optional[AvailabilityZone] = None
    SubnetIdentifier: Optional[String] = None
    SubnetStatus: Optional[String] = None


class SubnetList(RootModel[List[Subnet]]):
    root: List[Subnet]


class TableRestoreStatus(BaseModel):
    ClusterIdentifier: Optional[String] = None
    Message: Optional[String] = None
    NewTableName: Optional[String] = None
    ProgressInMegaBytes: Optional[LongOptional] = None
    RequestTime: Optional[TStamp] = None
    SnapshotIdentifier: Optional[String] = None
    SourceDatabaseName: Optional[String] = None
    SourceSchemaName: Optional[String] = None
    SourceTableName: Optional[String] = None
    Status: Optional[TableRestoreStatusType] = None
    TableRestoreRequestId: Optional[String] = None
    TargetDatabaseName: Optional[String] = None
    TargetSchemaName: Optional[String] = None
    TotalDataInMegaBytes: Optional[LongOptional] = None


class TableRestoreStatusList(RootModel[List[TableRestoreStatus]]):
    root: List[TableRestoreStatus]


class TableRestoreStatusMessage(BaseModel):
    Marker: Optional[String] = None
    TableRestoreStatusDetails: Optional[TableRestoreStatusList] = None


class TrackList(RootModel[List[MaintenanceTrack]]):
    root: List[MaintenanceTrack]


class TrackListMessage(BaseModel):
    MaintenanceTracks: Optional[TrackList] = None
    Marker: Optional[String] = None


class UsageLimit(BaseModel):
    Amount: Optional[Long] = None
    BreachAction: Optional[UsageLimitBreachAction] = None
    ClusterIdentifier: Optional[String] = None
    FeatureType: Optional[UsageLimitFeatureType] = None
    LimitType: Optional[UsageLimitLimitType] = None
    Period: Optional[UsageLimitPeriod] = None
    Tags: Optional[TagList] = None
    UsageLimitId: Optional[String] = None


class UsageLimits(RootModel[List[UsageLimit]]):
    root: List[UsageLimit]


class VpcEndpoint(BaseModel):
    NetworkInterfaces: Optional[NetworkInterfaceList] = None
    VpcEndpointId: Optional[String] = None
    VpcId: Optional[String] = None


class VpcEndpointsList(RootModel[List[VpcEndpoint]]):
    root: List[VpcEndpoint]


class Identifiers(RootModel[List[DeleteClusterSnapshotMessage]]):
    root: List[DeleteClusterSnapshotMessage]


class TargetAction(BaseModel):
    PauseCluster: Optional[PauseClusterMessage] = None
    ResizeCluster: Optional[ResizeClusterMessage] = None
    ResumeCluster: Optional[ResumeClusterMessage] = None


class SortingEntities(RootModel[List[SnapshotSortingEntity]]):
    root: List[SnapshotSortingEntity]


class Filter(RootModel[List[NodeConfigurationOptionsFilter]]):
    root: List[NodeConfigurationOptionsFilter]


class Filters(RootModel[List[ScheduledActionFilter]]):
    root: List[ScheduledActionFilter]


class Parameters(RootModel[List[Parameter]]):
    root: List[Parameter]


class AcceptReservedNodeExchangeOutputMessage(BaseModel):
    ExchangedReservedNode: Optional[ReservedNode] = None


class AssociatedClusterList(RootModel[List[ClusterAssociatedToSchedule]]):
    root: List[ClusterAssociatedToSchedule]


class AttributeValueList(RootModel[List[AttributeValueTarget]]):
    root: List[AttributeValueTarget]


class AuthorizeSnapshotAccessResult(BaseModel):
    Snapshot_1: Optional[Snapshot] = Field(None, alias='Snapshot')


class BatchDeleteClusterSnapshotsRequest(BaseModel):
    Identifiers: DeleteClusterSnapshotMessageList


class BatchModifyClusterSnapshotsMessage(BaseModel):
    Force: Optional[Boolean] = None
    ManualSnapshotRetentionPeriod: Optional[IntegerOptional] = None
    SnapshotIdentifierList_1: SnapshotIdentifierList = Field(
        ..., alias='SnapshotIdentifierList'
    )


class BatchSnapshotOperationErrorList(RootModel[List[SnapshotErrorMessage]]):
    root: List[SnapshotErrorMessage]


class BatchSnapshotOperationErrors(RootModel[List[SnapshotErrorMessage]]):
    root: List[SnapshotErrorMessage]


class ClusterDbRevision(BaseModel):
    ClusterIdentifier: Optional[String] = None
    CurrentDatabaseRevision: Optional[String] = None
    DatabaseRevisionReleaseDate: Optional[TStamp] = None
    RevisionTargets: Optional[RevisionTargetsList] = None


class ClusterDbRevisionsList(RootModel[List[ClusterDbRevision]]):
    root: List[ClusterDbRevision]


class ClusterDbRevisionsMessage(BaseModel):
    ClusterDbRevisions: Optional[ClusterDbRevisionsList] = None
    Marker: Optional[String] = None


class ClusterParameterGroupDetails(BaseModel):
    Marker: Optional[String] = None
    Parameters: Optional[ParametersList] = None


class ClusterParameterGroupStatus(BaseModel):
    ClusterParameterStatusList_1: Optional[ClusterParameterStatusList] = Field(
        None, alias='ClusterParameterStatusList'
    )
    ParameterApplyStatus: Optional[String] = None
    ParameterGroupName: Optional[String] = None


class ClusterParameterGroupStatusList(RootModel[List[ClusterParameterGroupStatus]]):
    root: List[ClusterParameterGroupStatus]


class ClusterParameterGroupsMessage(BaseModel):
    Marker: Optional[String] = None
    ParameterGroups: Optional[ParameterGroupList] = None


class ClusterSecurityGroup(BaseModel):
    ClusterSecurityGroupName: Optional[String] = None
    Description: Optional[String] = None
    EC2SecurityGroups: Optional[EC2SecurityGroupList] = None
    IPRanges: Optional[IPRangeList] = None
    Tags: Optional[TagList] = None


class ClusterSecurityGroups(RootModel[List[ClusterSecurityGroup]]):
    root: List[ClusterSecurityGroup]


class ClusterSubnetGroup(BaseModel):
    ClusterSubnetGroupName: Optional[String] = None
    Description: Optional[String] = None
    SubnetGroupStatus: Optional[String] = None
    Subnets: Optional[SubnetList] = None
    Tags: Optional[TagList] = None
    VpcId: Optional[String] = None


class ClusterSubnetGroups(RootModel[List[ClusterSubnetGroup]]):
    root: List[ClusterSubnetGroup]


class CopyClusterSnapshotResult(BaseModel):
    Snapshot_1: Optional[Snapshot] = Field(None, alias='Snapshot')


class CreateClusterMessage(BaseModel):
    AdditionalInfo: Optional[String] = None
    AllowVersionUpgrade: Optional[BooleanOptional] = None
    AquaConfigurationStatus_1: Optional[AquaConfigurationStatus] = Field(
        None, alias='AquaConfigurationStatus'
    )
    AutomatedSnapshotRetentionPeriod: Optional[IntegerOptional] = None
    AvailabilityZone: Optional[String] = None
    AvailabilityZoneRelocation: Optional[BooleanOptional] = None
    ClusterIdentifier: String
    ClusterParameterGroupName: Optional[String] = None
    ClusterSecurityGroups: Optional[ClusterSecurityGroupNameList] = None
    ClusterSubnetGroupName: Optional[String] = None
    ClusterType: Optional[String] = None
    ClusterVersion: Optional[String] = None
    DBName: Optional[String] = None
    DefaultIamRoleArn: Optional[String] = None
    ElasticIp: Optional[String] = None
    Encrypted: Optional[BooleanOptional] = None
    EnhancedVpcRouting: Optional[BooleanOptional] = None
    HsmClientCertificateIdentifier: Optional[String] = None
    HsmConfigurationIdentifier: Optional[String] = None
    IamRoles: Optional[IamRoleArnList] = None
    KmsKeyId: Optional[String] = None
    LoadSampleData: Optional[String] = None
    MaintenanceTrackName: Optional[String] = None
    ManualSnapshotRetentionPeriod: Optional[IntegerOptional] = None
    MasterUserPassword: String
    MasterUsername: String
    NodeType: String
    NumberOfNodes: Optional[IntegerOptional] = None
    Port: Optional[IntegerOptional] = None
    PreferredMaintenanceWindow: Optional[String] = None
    PubliclyAccessible: Optional[BooleanOptional] = None
    SnapshotScheduleIdentifier: Optional[String] = None
    Tags: Optional[TagList] = None
    VpcSecurityGroupIds: Optional[VpcSecurityGroupIdList] = None


class CreateClusterSecurityGroupResult(BaseModel):
    ClusterSecurityGroup_1: Optional[ClusterSecurityGroup] = Field(
        None, alias='ClusterSecurityGroup'
    )


class CreateClusterSnapshotResult(BaseModel):
    Snapshot_1: Optional[Snapshot] = Field(None, alias='Snapshot')


class CreateClusterSubnetGroupResult(BaseModel):
    ClusterSubnetGroup_1: Optional[ClusterSubnetGroup] = Field(
        None, alias='ClusterSubnetGroup'
    )


class CreateEventSubscriptionMessage(BaseModel):
    Enabled: Optional[BooleanOptional] = None
    EventCategories: Optional[EventCategoriesList] = None
    Severity: Optional[String] = None
    SnsTopicArn: String
    SourceIds: Optional[SourceIdsList] = None
    SourceType: Optional[String] = None
    SubscriptionName: String
    Tags: Optional[TagList] = None


class CreateHsmClientCertificateResult(BaseModel):
    HsmClientCertificate_1: Optional[HsmClientCertificate] = Field(
        None, alias='HsmClientCertificate'
    )


class CreateHsmConfigurationResult(BaseModel):
    HsmConfiguration_1: Optional[HsmConfiguration] = Field(
        None, alias='HsmConfiguration'
    )


class CreateScheduledActionMessage(BaseModel):
    Enable: Optional[BooleanOptional] = None
    EndTime: Optional[TStamp] = None
    IamRole: String
    Schedule: String
    ScheduledActionDescription: Optional[String] = None
    ScheduledActionName: String
    StartTime: Optional[TStamp] = None
    TargetAction: ScheduledActionType


class CreateSnapshotCopyGrantResult(BaseModel):
    SnapshotCopyGrant_1: Optional[SnapshotCopyGrant] = Field(
        None, alias='SnapshotCopyGrant'
    )


class CreateSnapshotScheduleMessage(BaseModel):
    DryRun: Optional[BooleanOptional] = None
    NextInvocations: Optional[IntegerOptional] = None
    ScheduleDefinitions: Optional[ScheduleDefinitionList] = None
    ScheduleDescription: Optional[String] = None
    ScheduleIdentifier: Optional[String] = None
    Tags: Optional[TagList] = None


class DataShare(BaseModel):
    AllowPubliclyAccessibleConsumers: Optional[Boolean] = None
    DataShareArn: Optional[String] = None
    DataShareAssociations: Optional[DataShareAssociationList] = None
    ManagedBy: Optional[String] = None
    ProducerArn: Optional[String] = None


class DataShareList(RootModel[List[DataShare]]):
    root: List[DataShare]


class DefaultClusterParameters(BaseModel):
    Marker: Optional[String] = None
    ParameterGroupFamily: Optional[String] = None
    Parameters: Optional[ParametersList] = None


class DeleteClusterSnapshotResult(BaseModel):
    Snapshot_1: Optional[Snapshot] = Field(None, alias='Snapshot')


class DescribeClusterSnapshotsMessage(BaseModel):
    ClusterExists: Optional[BooleanOptional] = None
    ClusterIdentifier: Optional[String] = None
    EndTime: Optional[TStamp] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    OwnerAccount: Optional[String] = None
    SnapshotArn: Optional[String] = None
    SnapshotIdentifier: Optional[String] = None
    SnapshotType: Optional[String] = None
    SortingEntities: Optional[SnapshotSortingEntityList] = None
    StartTime: Optional[TStamp] = None
    TagKeys: Optional[TagKeyList] = None
    TagValues: Optional[TagValueList] = None


class DescribeDataSharesForConsumerResult(BaseModel):
    DataShares: Optional[DataShareList] = None
    Marker: Optional[String] = None


class DescribeDataSharesForProducerResult(BaseModel):
    DataShares: Optional[DataShareList] = None
    Marker: Optional[String] = None


class DescribeDataSharesResult(BaseModel):
    DataShares: Optional[DataShareList] = None
    Marker: Optional[String] = None


class DescribeDefaultClusterParametersResult(BaseModel):
    DefaultClusterParameters_1: Optional[DefaultClusterParameters] = Field(
        None, alias='DefaultClusterParameters'
    )


class DescribeNodeConfigurationOptionsMessage(BaseModel):
    ActionType_1: ActionType = Field(..., alias='ActionType')
    ClusterIdentifier: Optional[String] = None
    Filters: Optional[NodeConfigurationOptionsFilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    OwnerAccount: Optional[String] = None
    SnapshotArn: Optional[String] = None
    SnapshotIdentifier: Optional[String] = None


class DescribePartnersOutputMessage(BaseModel):
    PartnerIntegrationInfoList_1: Optional[PartnerIntegrationInfoList] = Field(
        None, alias='PartnerIntegrationInfoList'
    )


class DescribeReservedNodeExchangeStatusOutputMessage(BaseModel):
    Marker: Optional[String] = None
    ReservedNodeExchangeStatusDetails: Optional[ReservedNodeExchangeStatusList] = None


class DescribeScheduledActionsMessage(BaseModel):
    Active: Optional[BooleanOptional] = None
    EndTime: Optional[TStamp] = None
    Filters: Optional[ScheduledActionFilterList] = None
    Marker: Optional[String] = None
    MaxRecords: Optional[IntegerOptional] = None
    ScheduledActionName: Optional[String] = None
    StartTime: Optional[TStamp] = None
    TargetActionType: Optional[ScheduledActionTypeValues] = None


class EnableLoggingMessage(BaseModel):
    BucketName: Optional[String] = None
    ClusterIdentifier: String
    LogDestinationType_1: Optional[LogDestinationType] = Field(
        None, alias='LogDestinationType'
    )
    LogExports: Optional[LogTypeList] = None
    S3KeyPrefix: Optional[String] = None


class Endpoint(BaseModel):
    Address: Optional[String] = None
    Port: Optional[Integer] = None
    VpcEndpoints: Optional[VpcEndpointsList] = None


class EndpointAccess(BaseModel):
    Address: Optional[String] = None
    ClusterIdentifier: Optional[String] = None
    EndpointCreateTime: Optional[TStamp] = None
    EndpointName: Optional[String] = None
    EndpointStatus: Optional[String] = None
    Port: Optional[Integer] = None
    ResourceOwner: Optional[String] = None
    SubnetGroupName: Optional[String] = None
    VpcEndpoint_1: Optional[VpcEndpoint] = Field(None, alias='VpcEndpoint')
    VpcSecurityGroups: Optional[VpcSecurityGroupMembershipList] = None


class EndpointAccesses(RootModel[List[EndpointAccess]]):
    root: List[EndpointAccess]


class EndpointAuthorizationList(BaseModel):
    EndpointAuthorizationList: Optional[EndpointAuthorizations] = None
    Marker: Optional[String] = None


class Event(BaseModel):
    Date: Optional[TStamp] = None
    EventCategories: Optional[EventCategoriesList] = None
    EventId: Optional[String] = None
    Message: Optional[String] = None
    Severity: Optional[String] = None
    SourceIdentifier: Optional[String] = None
    SourceType_1: Optional[SourceType] = Field(None, alias='SourceType')


class EventCategoriesMap(BaseModel):
    Events: Optional[EventInfoMapList] = None
    SourceType: Optional[String] = None


class EventCategoriesMapList(RootModel[List[EventCategoriesMap]]):
    root: List[EventCategoriesMap]


class EventCategoriesMessage(BaseModel):
    EventCategoriesMapList_1: Optional[EventCategoriesMapList] = Field(
        None, alias='EventCategoriesMapList'
    )


class EventList(RootModel[List[Event]]):
    root: List[Event]


class EventSubscription(BaseModel):
    CustSubscriptionId: Optional[String] = None
    CustomerAwsId: Optional[String] = None
    Enabled: Optional[Boolean] = None
    EventCategoriesList_1: Optional[EventCategoriesList] = Field(
        None, alias='EventCategoriesList'
    )
    Severity: Optional[String] = None
    SnsTopicArn: Optional[String] = None
    SourceIdsList_1: Optional[SourceIdsList] = Field(None, alias='SourceIdsList')
    SourceType: Optional[String] = None
    Status: Optional[String] = None
    SubscriptionCreationTime: Optional[TStamp] = None
    Tags: Optional[TagList] = None


class EventSubscriptionsList(RootModel[List[EventSubscription]]):
    root: List[EventSubscription]


class EventSubscriptionsMessage(BaseModel):
    EventSubscriptionsList_1: Optional[EventSubscriptionsList] = Field(
        None, alias='EventSubscriptionsList'
    )
    Marker: Optional[String] = None


class EventsMessage(BaseModel):
    Events: Optional[EventList] = None
    Marker: Optional[String] = None


class GetReservedNodeExchangeOfferingsOutputMessage(BaseModel):
    Marker: Optional[String] = None
    ReservedNodeOfferings: Optional[ReservedNodeOfferingList] = None


class ModifyClusterParameterGroupMessage(BaseModel):
    ParameterGroupName: String
    Parameters: ParametersList


class ModifyClusterSnapshotResult(BaseModel):
    Snapshot_1: Optional[Snapshot] = Field(None, alias='Snapshot')


class ModifyClusterSubnetGroupResult(BaseModel):
    ClusterSubnetGroup_1: Optional[ClusterSubnetGroup] = Field(
        None, alias='ClusterSubnetGroup'
    )


class ModifyEventSubscriptionMessage(BaseModel):
    Enabled: Optional[BooleanOptional] = None
    EventCategories: Optional[EventCategoriesList] = None
    Severity: Optional[String] = None
    SnsTopicArn: Optional[String] = None
    SourceIds: Optional[SourceIdsList] = None
    SourceType: Optional[String] = None
    SubscriptionName: String


class ModifyEventSubscriptionResult(BaseModel):
    EventSubscription_1: Optional[EventSubscription] = Field(
        None, alias='EventSubscription'
    )


class ModifyScheduledActionMessage(BaseModel):
    Enable: Optional[BooleanOptional] = None
    EndTime: Optional[TStamp] = None
    IamRole: Optional[String] = None
    Schedule: Optional[String] = None
    ScheduledActionDescription: Optional[String] = None
    ScheduledActionName: String
    StartTime: Optional[TStamp] = None
    TargetAction: Optional[ScheduledActionType] = None


class ModifySnapshotScheduleMessage(BaseModel):
    ScheduleDefinitions: ScheduleDefinitionList
    ScheduleIdentifier: String


class PurchaseReservedNodeOfferingResult(BaseModel):
    ReservedNode_1: Optional[ReservedNode] = Field(None, alias='ReservedNode')


class ReservedNodeConfigurationOption(BaseModel):
    SourceReservedNode: Optional[ReservedNode] = None
    TargetReservedNodeCount: Optional[Integer] = None
    TargetReservedNodeOffering: Optional[ReservedNodeOffering] = None


class ReservedNodeConfigurationOptionList(
    RootModel[List[ReservedNodeConfigurationOption]]
):
    root: List[ReservedNodeConfigurationOption]


class RestoreTableFromClusterSnapshotResult(BaseModel):
    TableRestoreStatus_1: Optional[TableRestoreStatus] = Field(
        None, alias='TableRestoreStatus'
    )


class RevokeClusterSecurityGroupIngressResult(BaseModel):
    ClusterSecurityGroup_1: Optional[ClusterSecurityGroup] = Field(
        None, alias='ClusterSecurityGroup'
    )


class RevokeSnapshotAccessResult(BaseModel):
    Snapshot_1: Optional[Snapshot] = Field(None, alias='Snapshot')


class ScheduledAction(BaseModel):
    EndTime: Optional[TStamp] = None
    IamRole: Optional[String] = None
    NextInvocations: Optional[ScheduledActionTimeList] = None
    Schedule: Optional[String] = None
    ScheduledActionDescription: Optional[String] = None
    ScheduledActionName: Optional[String] = None
    StartTime: Optional[TStamp] = None
    State: Optional[ScheduledActionState] = None
    TargetAction: Optional[ScheduledActionType] = None


class ScheduledActionList(RootModel[List[ScheduledAction]]):
    root: List[ScheduledAction]


class ScheduledActionsMessage(BaseModel):
    Marker: Optional[String] = None
    ScheduledActions: Optional[ScheduledActionList] = None


class SnapshotSchedule(BaseModel):
    AssociatedClusterCount: Optional[IntegerOptional] = None
    AssociatedClusters: Optional[AssociatedClusterList] = None
    NextInvocations: Optional[ScheduledSnapshotTimeList] = None
    ScheduleDefinitions: Optional[ScheduleDefinitionList] = None
    ScheduleDescription: Optional[String] = None
    ScheduleIdentifier: Optional[String] = None
    Tags: Optional[TagList] = None


class SnapshotScheduleList(RootModel[List[SnapshotSchedule]]):
    root: List[SnapshotSchedule]


class UsageLimitList(BaseModel):
    Marker: Optional[String] = None
    UsageLimits_1: Optional[UsageLimits] = Field(None, alias='UsageLimits')


class AccountAttribute(BaseModel):
    AttributeName: Optional[String] = None
    AttributeValues: Optional[AttributeValueList] = None


class AttributeList(RootModel[List[AccountAttribute]]):
    root: List[AccountAttribute]


class AuthorizeClusterSecurityGroupIngressResult(BaseModel):
    ClusterSecurityGroup_1: Optional[ClusterSecurityGroup] = Field(
        None, alias='ClusterSecurityGroup'
    )


class BatchDeleteClusterSnapshotsResult(BaseModel):
    Errors: Optional[BatchSnapshotOperationErrorList] = None
    Resources: Optional[SnapshotIdentifierList] = None


class BatchModifyClusterSnapshotsOutputMessage(BaseModel):
    Errors: Optional[BatchSnapshotOperationErrors] = None
    Resources: Optional[SnapshotIdentifierList] = None


class Cluster(BaseModel):
    AllowVersionUpgrade: Optional[Boolean] = None
    AquaConfiguration_1: Optional[AquaConfiguration] = Field(
        None, alias='AquaConfiguration'
    )
    AutomatedSnapshotRetentionPeriod: Optional[Integer] = None
    AvailabilityZone: Optional[String] = None
    AvailabilityZoneRelocationStatus: Optional[String] = None
    ClusterAvailabilityStatus: Optional[String] = None
    ClusterCreateTime: Optional[TStamp] = None
    ClusterIdentifier: Optional[String] = None
    ClusterNamespaceArn: Optional[String] = None
    ClusterNodes: Optional[ClusterNodesList] = None
    ClusterParameterGroups: Optional[ClusterParameterGroupStatusList] = None
    ClusterPublicKey: Optional[String] = None
    ClusterRevisionNumber: Optional[String] = None
    ClusterSecurityGroups: Optional[ClusterSecurityGroupMembershipList] = None
    ClusterSnapshotCopyStatus_1: Optional[ClusterSnapshotCopyStatus] = Field(
        None, alias='ClusterSnapshotCopyStatus'
    )
    ClusterStatus: Optional[String] = None
    ClusterSubnetGroupName: Optional[String] = None
    ClusterVersion: Optional[String] = None
    DBName: Optional[String] = None
    DataTransferProgress_1: Optional[DataTransferProgress] = Field(
        None, alias='DataTransferProgress'
    )
    DefaultIamRoleArn: Optional[String] = None
    DeferredMaintenanceWindows: Optional[DeferredMaintenanceWindowsList] = None
    ElasticIpStatus_1: Optional[ElasticIpStatus] = Field(None, alias='ElasticIpStatus')
    ElasticResizeNumberOfNodeOptions: Optional[String] = None
    Encrypted: Optional[Boolean] = None
    Endpoint_1: Optional[Endpoint] = Field(None, alias='Endpoint')
    EnhancedVpcRouting: Optional[Boolean] = None
    ExpectedNextSnapshotScheduleTime: Optional[TStamp] = None
    ExpectedNextSnapshotScheduleTimeStatus: Optional[String] = None
    HsmStatus_1: Optional[HsmStatus] = Field(None, alias='HsmStatus')
    IamRoles: Optional[ClusterIamRoleList] = None
    KmsKeyId: Optional[String] = None
    MaintenanceTrackName: Optional[String] = None
    ManualSnapshotRetentionPeriod: Optional[Integer] = None
    MasterUsername: Optional[String] = None
    ModifyStatus: Optional[String] = None
    NextMaintenanceWindowStartTime: Optional[TStamp] = None
    NodeType: Optional[String] = None
    NumberOfNodes: Optional[Integer] = None
    PendingActions: Optional[PendingActionsList] = None
    PendingModifiedValues_1: Optional[PendingModifiedValues] = Field(
        None, alias='PendingModifiedValues'
    )
    PreferredMaintenanceWindow: Optional[String] = None
    PubliclyAccessible: Optional[Boolean] = None
    ReservedNodeExchangeStatus_1: Optional[ReservedNodeExchangeStatus] = Field(
        None, alias='ReservedNodeExchangeStatus'
    )
    ResizeInfo_1: Optional[ResizeInfo] = Field(None, alias='ResizeInfo')
    RestoreStatus_1: Optional[RestoreStatus] = Field(None, alias='RestoreStatus')
    SnapshotScheduleIdentifier: Optional[String] = None
    SnapshotScheduleState: Optional[ScheduleState] = None
    Tags: Optional[TagList] = None
    TotalStorageCapacityInMegaBytes: Optional[LongOptional] = None
    VpcId: Optional[String] = None
    VpcSecurityGroups: Optional[VpcSecurityGroupMembershipList] = None


class ClusterList(RootModel[List[Cluster]]):
    root: List[Cluster]


class ClusterSecurityGroupMessage(BaseModel):
    ClusterSecurityGroups_1: Optional[ClusterSecurityGroups] = Field(
        None, alias='ClusterSecurityGroups'
    )
    Marker: Optional[String] = None


class ClusterSubnetGroupMessage(BaseModel):
    ClusterSubnetGroups_1: Optional[ClusterSubnetGroups] = Field(
        None, alias='ClusterSubnetGroups'
    )
    Marker: Optional[String] = None


class ClustersMessage(BaseModel):
    Clusters: Optional[ClusterList] = None
    Marker: Optional[String] = None


class CreateClusterResult(BaseModel):
    Cluster_1: Optional[Cluster] = Field(None, alias='Cluster')


class CreateEventSubscriptionResult(BaseModel):
    EventSubscription_1: Optional[EventSubscription] = Field(
        None, alias='EventSubscription'
    )


class DeleteClusterResult(BaseModel):
    Cluster_1: Optional[Cluster] = Field(None, alias='Cluster')


class DescribeSnapshotSchedulesOutputMessage(BaseModel):
    Marker: Optional[String] = None
    SnapshotSchedules: Optional[SnapshotScheduleList] = None


class DisableSnapshotCopyResult(BaseModel):
    Cluster_1: Optional[Cluster] = Field(None, alias='Cluster')


class EnableSnapshotCopyResult(BaseModel):
    Cluster_1: Optional[Cluster] = Field(None, alias='Cluster')


class EndpointAccessList(BaseModel):
    EndpointAccessList: Optional[EndpointAccesses] = None
    Marker: Optional[String] = None


class GetReservedNodeExchangeConfigurationOptionsOutputMessage(BaseModel):
    Marker: Optional[String] = None
    ReservedNodeConfigurationOptionList_1: Optional[
        ReservedNodeConfigurationOptionList
    ] = Field(None, alias='ReservedNodeConfigurationOptionList')


class ModifyClusterDbRevisionResult(BaseModel):
    Cluster_1: Optional[Cluster] = Field(None, alias='Cluster')


class ModifyClusterIamRolesResult(BaseModel):
    Cluster_1: Optional[Cluster] = Field(None, alias='Cluster')


class ModifyClusterMaintenanceResult(BaseModel):
    Cluster_1: Optional[Cluster] = Field(None, alias='Cluster')


class ModifyClusterResult(BaseModel):
    Cluster_1: Optional[Cluster] = Field(None, alias='Cluster')


class ModifySnapshotCopyRetentionPeriodResult(BaseModel):
    Cluster_1: Optional[Cluster] = Field(None, alias='Cluster')


class PauseClusterResult(BaseModel):
    Cluster_1: Optional[Cluster] = Field(None, alias='Cluster')


class RebootClusterResult(BaseModel):
    Cluster_1: Optional[Cluster] = Field(None, alias='Cluster')


class ResizeClusterResult(BaseModel):
    Cluster_1: Optional[Cluster] = Field(None, alias='Cluster')


class RestoreFromClusterSnapshotResult(BaseModel):
    Cluster_1: Optional[Cluster] = Field(None, alias='Cluster')


class ResumeClusterResult(BaseModel):
    Cluster_1: Optional[Cluster] = Field(None, alias='Cluster')


class RotateEncryptionKeyResult(BaseModel):
    Cluster_1: Optional[Cluster] = Field(None, alias='Cluster')


class AccountAttributeList(BaseModel):
    AccountAttributes: Optional[AttributeList] = None
